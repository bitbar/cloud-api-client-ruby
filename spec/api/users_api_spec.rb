=begin
#BitbarCloud API

#BitbarCloud API

OpenAPI spec version: 3.24.1-master-20231027-124207

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.50
=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::UsersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::UsersApi)
    end
  end

  # unit tests for activate
  # Activate user after registration.
  # @param email 
  # @param key 
  # @param password 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name 
  # @option opts [String] :last_name 
  # @option opts [String] :phone 
  # @option opts [String] :organization 
  # @option opts [String] :country 
  # @option opts [String] :city 
  # @option opts [String] :state 
  # @option opts [String] :address 
  # @option opts [String] :zip 
  # @return [APIUser]
  describe 'activate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_additional_user
  # Add additional user.
  # @param user_id 
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'add_additional_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_feedback_form_email
  # Create feedback email.
  # @param content 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [UserIdFeedbackBody] :body 
  # @return [nil]
  describe 'create_feedback_form_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user
  # Delete user.
  # @param user_id 
  # @param password 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_additional_user
  # Disable additional user.
  # @param user_id 
  # @param additional_user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'disable_additional_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_additional_user
  # Enable additional user.
  # @param user_id 
  # @param additional_user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'enable_additional_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_recovery_key_for_user
  # Generate recovery key.
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIMessage]
  describe 'generate_recovery_key_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account
  # Get account.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccount]
  describe 'get_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_concurrency_status
  # Get account concurrency status.
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountConcurrencyStatusMap]
  describe 'get_account_concurrency_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_additional_users
  # Get additional users.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;lastName_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;firstName_a&lt;br&gt;sort&#x3D;serviceIds_a&lt;br&gt;sort&#x3D;mainUserId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;deleteTime_a&lt;br&gt;sort&#x3D;accountServiceIds_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;email_a&lt;br&gt;sort&#x3D;status_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;lastname_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;firstname_eq_value&lt;br&gt;filter&#x3D;serviceids_eq_1&lt;br&gt;filter&#x3D;mainuserid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364459&lt;br&gt;filter&#x3D;deletetime_eq_1700230364459&lt;br&gt;filter&#x3D;accountserviceids_eq_1&lt;br&gt;filter&#x3D;ismainuser_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;email_eq_value&lt;br&gt;filter&#x3D;status_eq_inactive
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUser]
  describe 'get_additional_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Get user.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_by_recovery_key
  # Get user by recovery key.
  # @param recovery_key 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'get_user_by_recovery_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for load_user_preferences
  # Load user preferences.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUserPreference]
  describe 'load_user_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for load_user_ui_preferences
  # Load ui preferences.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'load_user_ui_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for recover_password
  # Set new password after recovery.
  # @param key 
  # @param password 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'recover_password test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for register
  # Register new user.
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'register test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reset_api_key
  # Reset api key.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'reset_api_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_user
  # Restore user requested to be deleted.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'restore_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for store_user_preferences
  # Store user preferences.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUserPreference]
  describe 'store_user_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for store_user_ui_preferences
  # Store ui preferences.
  # @param user_id 
  # @param data 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'store_user_ui_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Update user.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name 
  # @option opts [String] :last_name 
  # @option opts [String] :locale_country 
  # @option opts [String] :time_zone 
  # @option opts [String] :email 
  # @option opts [String] :code 
  # @option opts [String] :state 
  # @option opts [String] :city 
  # @option opts [String] :address 
  # @option opts [String] :phone 
  # @option opts [String] :organization 
  # @option opts [String] :password 
  # @option opts [String] :new_password 
  # @option opts [String] :confirm_password 
  # @option opts [BOOLEAN] :mfa_enabled 
  # @option opts [String] :mfa_code 
  # @return [APIUser]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
