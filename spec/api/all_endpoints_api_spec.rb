=begin
#BitbarCloud API

#BitbarCloud API

OpenAPI spec version: 3.24.1-master-20231027-124207

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.50
=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::AllEndpointsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AllEndpointsApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::AllEndpointsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AllEndpointsApi' do
    it 'should create an instance of AllEndpointsApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::AllEndpointsApi)
    end
  end

  # unit tests for abort_device_session
  # Abort device session.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'abort_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_device_session1
  # Abort device session.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'abort_device_session1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_project_test_run
  # Abort test run and receive partial results.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'abort_project_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_test_run
  # Abort test run and receive partial results.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [APITestRun]
  describe 'abort_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_test_run1
  # Abort test run and receive partial results.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAdminTestRun]
  describe 'abort_test_run1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_user_test_run
  # Abort test run and receive partial results.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'abort_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activate
  # Activate user after registration.
  # @param email 
  # @param key 
  # @param password 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name 
  # @option opts [String] :last_name 
  # @option opts [String] :phone 
  # @option opts [String] :organization 
  # @option opts [String] :country 
  # @option opts [String] :city 
  # @option opts [String] :state 
  # @option opts [String] :address 
  # @option opts [String] :zip 
  # @return [APIUser]
  describe 'activate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activate_license
  # Activate license.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'activate_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activate_service
  # Activate service.
  # @param service_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :activate_time 
  # @return [APIService]
  describe 'activate_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activate_user_service
  # Activate account service.
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountService]
  describe 'activate_user_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_additional_user
  # Add additional user.
  # @param user_id 
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'add_additional_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_cleanup_configuration
  # Add device specific cleanup configuration.
  # @param device_id 
  # @param device_cleanup_configuration_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'add_device_cleanup_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_label
  # Add label to device.
  # @param device_id 
  # @param label_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceProperty]
  describe 'add_device_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_label1
  # Add label to device.
  # @param device_id 
  # @param label_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceProperty]
  describe 'add_device_label1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_model_criteria
  # Create device model criterion.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :field 
  # @option opts [Integer] :label_group_id 
  # @return [APIMessage]
  describe 'add_device_model_criteria test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_session_output_file
  # Add file to device session.
  # @param name 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody4] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_device_session_output_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_to_device_group
  # Add device to device group.
  # @param user_id 
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_id 
  # @option opts [Array<Integer>] :device_ids 
  # @return [APIDeviceGroup]
  describe 'add_device_to_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_device_to_device_group1
  # Add device to device group.
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_id 
  # @option opts [Array<Integer>] :device_ids 
  # @return [APIDeviceGroup]
  describe 'add_device_to_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file
  # Add file to device session.
  # @param name 
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file1
  # Add file to device session.
  # @param name 
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody1] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file2
  # Add file to device session.
  # @param name 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody2] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file3
  # Add file to device session.
  # @param name 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody3] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_project_test_run_tag
  # Add tag to test run.
  # @param project_id 
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'add_project_test_run_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_role_to_account
  # Add account role.
  # @param user_id 
  # @param role_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :value 
  # @option opts [Integer] :expire_time 
  # @return [APIRole]
  describe 'add_role_to_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_selector_to_device_group
  # Add selectors to device group.
  # @param user_id 
  # @param device_group_id 
  # @param selector_ids 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIDeviceGroup]
  describe 'add_selector_to_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_selector_to_device_group1
  # Add selectors to device group.
  # @param device_group_id 
  # @param selector_ids 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceGroup]
  describe 'add_selector_to_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_service_to_user
  # Add service to user.
  # @param user_id 
  # @param service_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count 
  # @option opts [Integer] :end_time 
  # @return [APIAccountService]
  describe 'add_service_to_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_test_run_tag
  # Add tag to test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'add_test_run_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_test_run_tag1
  # Add tag to test run.
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [APITag]
  describe 'add_test_run_tag1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_user
  # Add user to access group.
  # @param user_id 
  # @param access_group_id 
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'add_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_user1
  # Add user to access group.
  # @param access_group_id 
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'add_user1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for archive_service
  # Archive service.
  # @param service_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ban_application
  # Create property banning application.
  # @param test_run_id 
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'ban_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ban_email_domain
  # Create property banning email domain.
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'ban_email_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for blink
  # Start blinking device screen.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAdminDevice]
  describe 'blink test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for buy_service
  # Buy service.
  # @param user_id 
  # @param service_id 
  # @param payment_method 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name 
  # @option opts [String] :last_name 
  # @option opts [String] :email 
  # @option opts [String] :phone 
  # @option opts [String] :organization 
  # @option opts [String] :country 
  # @option opts [String] :city 
  # @option opts [String] :state 
  # @option opts [String] :address 
  # @option opts [String] :zip 
  # @option opts [String] :card_number 
  # @option opts [String] :expiration_date 
  # @option opts [String] :cvv 
  # @option opts [Integer] :count 
  # @option opts [String] :stripe_token 
  # @return [APIServicePaymentStatus]
  describe 'buy_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_subscription
  # Cancel service subscription.
  # @param user_id 
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @return [APIServicePaymentStatus]
  describe 'cancel_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_service_price
  # Update service price.
  # @param service_id 
  # @param cent_price 
  # @param [Hash] opts the optional parameters
  # @return [APIService]
  describe 'change_service_price test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Create access group.
  # @param user_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope 
  # @return [APIAccessGroup]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create1
  # Create access group.
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope 
  # @option opts [Integer] :user_id 
  # @return [APIAccessGroup]
  describe 'create1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_browser
  # Create browser.
  # @param name 
  # @param display_name 
  # @param version 
  # @param os_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :architecture 
  # @option opts [String] :install_url 
  # @return [APIBrowser]
  describe 'create_browser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_device_cleanup_configuration
  # Create device cleanup configuration.
  # @param content 
  # @param os_type 
  # @param discriminator 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :enabled 
  # @return [APIDeviceCleanupConfiguration]
  describe 'create_device_cleanup_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_device_session_connection
  # Create connection for device session.
  # @param user_id 
  # @param device_session_id 
  # @param host 
  # @param port 
  # @param type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :password 
  # @return [APIConnection]
  describe 'create_device_session_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_device_session_connection1
  # Create connection for device session.
  # @param device_session_id 
  # @param host 
  # @param port 
  # @param type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :password 
  # @return [APIConnection]
  describe 'create_device_session_connection1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_feedback_form_email
  # Create feedback email.
  # @param content 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [UserIdFeedbackBody] :body 
  # @return [nil]
  describe 'create_feedback_form_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_file_property
  # Create file property.
  # @param file_id 
  # @param key 
  # @param value 
  # @param [Hash] opts the optional parameters
  # @return [APIUserFileProperty]
  describe 'create_file_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_framework
  # Create framework.
  # @param name 
  # @param os_type 
  # @param content 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description 
  # @option opts [String] :required_app_extensions 
  # @option opts [String] :required_test_extensions 
  # @option opts [String] :required_test_file_tags 
  # @option opts [String] :documentation_url 
  # @option opts [BOOLEAN] :for_projects 
  # @option opts [BOOLEAN] :can_run_from_ui 
  # @option opts [BOOLEAN] :retryable 
  # @option opts [BOOLEAN] :skip_queue 
  # @option opts [BOOLEAN] :skip_older_sdk 
  # @option opts [String] :type 
  # @option opts [Integer] :account_id 
  # @option opts [Integer] :label_id 
  # @option opts [BOOLEAN] :add_label_to_devices 
  # @option opts [Array<Integer>] :role_ids 
  # @option opts [Integer] :sample_app_id 
  # @option opts [Integer] :sample_test_id 
  # @option opts [String] :icon 
  # @return [APIFramework]
  describe 'create_framework test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_inspector_device_session
  # Create device session.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [APIDeviceSessionConfig] :body 
  # @option opts [Integer] :device_model_id 
  # @option opts [String] :type 
  # @option opts [String] :browser_name 
  # @option opts [String] :browser_version 
  # @option opts [String] :screen_resolution 
  # @option opts [String] :url 
  # @return [APIDeviceSession]
  describe 'create_inspector_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_label
  # Add label to label group.
  # @param group_id 
  # @param name 
  # @param display_name 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceProperty]
  describe 'create_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_label_group
  # Create label group.
  # @param name 
  # @param display_name 
  # @param [Hash] opts the optional parameters
  # @return [APILabelGroup]
  describe 'create_label_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_license
  # Create license.
  # @param user_id 
  # @param unit 
  # @param unit_count 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :android_enabled 
  # @option opts [Integer] :android_device_limit 
  # @option opts [Integer] :android_project_limit 
  # @option opts [BOOLEAN] :inspector_enabled 
  # @option opts [BOOLEAN] :ios_enabled 
  # @option opts [Integer] :ios_device_limit 
  # @option opts [Integer] :ios_project_limit 
  # @option opts [BOOLEAN] :private_instance 
  # @option opts [BOOLEAN] :build_enabled 
  # @option opts [Integer] :build_limit 
  # @option opts [BOOLEAN] :desktop_enabled 
  # @option opts [Integer] :desktop_device_limit 
  # @option opts [Integer] :desktop_project_limit 
  # @option opts [Integer] :global_device_limit 
  # @option opts [Integer] :global_project_limit 
  # @return [APILicense]
  describe 'create_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_my_project
  # Create project.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @return [APIProject]
  describe 'create_my_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_visual_test_access
  # Create or update VisualTests access.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIVisualTestAccess]
  describe 'create_or_update_visual_test_access test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_property
  # Create property.
  # @param name 
  # @param value 
  # @param description 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from_time 
  # @option opts [Integer] :to_time 
  # @return [APIProperty]
  describe 'create_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_service
  # Create or update the service.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [APIService]
  describe 'create_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user
  # Create user.
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user_device_group
  # Create device group.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :display_name 
  # @option opts [String] :os_type 
  # @option opts [Array<Integer>] :device_ids 
  # @option opts [Array<Integer>] :selector_ids 
  # @return [APIDeviceGroup]
  describe 'create_user_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user_notification
  # Create notification.
  # @param user_id 
  # @param destination 
  # @param channel 
  # @param scope 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [APINotification]
  describe 'create_user_notification test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deactivate_license
  # Deactivate license.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'deactivate_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deactivate_user_service
  # Deactivate account service.
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountService]
  describe 'deactivate_user_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Delete users tunnel.
  # @param user_id 
  # @param tunnel_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete1
  # Delete access group.
  # @param user_id 
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete2
  # Delete access group.
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_browser
  # Delete browser.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_browser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cluster
  # Delete cluster.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_cluster test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device
  # Delete device.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_cleanup_configuration
  # Delete device specific cleanup configuration.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_cleanup_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_from_device_group
  # Delete device from device group.
  # @param user_id 
  # @param device_group_id 
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_from_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_from_device_group1
  # Delete device from device group.
  # @param device_group_id 
  # @param device_model_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_from_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_group
  # Delete device group.
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_label
  # Delete label from device.
  # @param device_id 
  # @param label_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_label1
  # Delete label from device.
  # @param device_id 
  # @param label_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_device_label1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_model_criteria
  # Delete device model criterion.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIMessage]
  describe 'delete_device_model_criteria test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_devices_from_device_group
  # Delete devices from device group.
  # @param user_id 
  # @param device_group_id 
  # @param device_ids 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_devices_from_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_devices_from_device_group1
  # Delete devices from device group.
  # @param device_group_id 
  # @param device_ids 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_devices_from_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file
  # Delete file.
  # @param user_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file1
  # Delete file from device session.
  # @param user_id 
  # @param device_session_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file2
  # Delete file.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file3
  # Delete file from device session.
  # @param device_session_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file4
  # Delete sample file.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file4 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file_property
  # Delete file property.
  # @param file_id 
  # @param property_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_framework
  # Delete framework.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_framework test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_label
  # Delete label.
  # @param group_id 
  # @param label_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_label_group
  # Delete label group.
  # @param group_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_label_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_license
  # Delete license.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project
  # Delete project.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project_test_run
  # Delete test run.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_project_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_property
  # Delete property.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource
  # Delete access group resource.
  # @param user_id 
  # @param access_group_id 
  # @param resource_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_resource test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource1
  # Delete access group resource.
  # @param access_group_id 
  # @param resource_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_resource1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_role_from_account
  # Delete account role.
  # @param user_id 
  # @param account_role_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_role_from_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_selector_from_device_group
  # Delete selector from device group.
  # @param user_id 
  # @param device_group_id 
  # @param selector_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_selector_from_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_selector_from_device_group1
  # Delete selector from device group.
  # @param device_group_id 
  # @param selector_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_selector_from_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_selectors_from_device_group
  # Delete selectors from device group.
  # @param user_id 
  # @param device_group_id 
  # @param selector_ids 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_selectors_from_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_selectors_from_device_group1
  # Delete selectors from device group.
  # @param device_group_id 
  # @param selector_ids 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_selectors_from_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run
  # Delete test run.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [nil]
  describe 'delete_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run1
  # Delete test run.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_test_run1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_tag
  # Delete test run tag.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_test_run_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_tag1
  # Delete test run tag.
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [nil]
  describe 'delete_test_run_tag1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_tag_with_project
  # Delete test run tag.
  # @param project_id 
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_test_run_tag_with_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user
  # Delete user.
  # @param user_id 
  # @param password 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user1
  # Delete access group user.
  # @param user_id 
  # @param access_group_id 
  # @param participant_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user2
  # Delete access group user.
  # @param access_group_id 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_device_group
  # Delete device group.
  # @param user_id 
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_notification_email
  # Delete notification.
  # @param user_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_notification_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_project
  # Delete project.
  # @param user_id 
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_test_run
  # Delete test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_test_runs
  # Delete all user test runs.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_additional_user
  # Disable additional user.
  # @param user_id 
  # @param additional_user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'disable_additional_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_user
  # Disable user.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'disable_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_icon_file
  # Download icon of file.
  # @param user_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_icon_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_icon_file1
  # Download icon of file.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_icon_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_license
  # Get license.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_output_files_zip
  # Get device session output files.zip.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_output_files_zip test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_output_files_zip1
  # Get device session output files.zip.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_output_files_zip1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_test_run_output_files_zip
  # Get device session output files.zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_test_run_output_files_zip test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_test_run_output_files_zip1
  # Get device session output files.zip.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_test_run_output_files_zip1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_test_run_output_files_zip2
  # Get device session output files.zip.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_test_run_output_files_zip2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_user_file
  # Download file.
  # @param user_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @return [nil]
  describe 'download_user_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_user_file1
  # Download file.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @return [nil]
  describe 'download_user_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_additional_user
  # Enable additional user.
  # @param user_id 
  # @param additional_user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'enable_additional_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_user
  # Enable user.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'enable_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_recovery_key_for_user
  # Generate recovery key.
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [APIMessage]
  describe 'generate_recovery_key_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Get users tunnels.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :active 
  # @return [APIListAPISmartbearTunnel]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get1
  # Get access group.
  # @param user_id 
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccessGroup]
  describe 'get1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get2
  # Get access group.
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccessGroup]
  describe 'get2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account
  # Get account.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccount]
  describe 'get_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account1
  # Get account.
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_dedicated_devices_info 
  # @return [APIAccount]
  describe 'get_account1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_concurrency_status
  # Get account concurrency status.
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountConcurrencyStatusMap]
  describe 'get_account_concurrency_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_list
  # Get accounts.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_dedicated_devices_info 
  # @option opts [BOOLEAN] :only_with_dedicated_devices 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;mainUserFirstName_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;mainUserLastName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1700230366167&lt;br&gt;filter&#x3D;mainuserfirstname_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;mainuserlastname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAccount]
  describe 'get_account_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_preferences
  # Get account preferences.
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountPreference]
  describe 'get_account_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_roles
  # Get account roles.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; 
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_admin&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIRole]
  describe 'get_account_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_service_payment
  # Get billing information.
  # @param user_id 
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :on_date 
  # @return [APIAccountServicePayment]
  describe 'get_account_service_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_services
  # Get account services.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;active_a&lt;br&gt;sort&#x3D;activatedByName_a&lt;br&gt;sort&#x3D;serviceName_a&lt;br&gt;sort&#x3D;deactivatedByName_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;cbtId_a&lt;br&gt;sort&#x3D;price_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;deactivatereason_eq_initial_failure&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;active_eq_true&lt;br&gt;filter&#x3D;activatedbyname_eq_value&lt;br&gt;filter&#x3D;servicename_eq_value&lt;br&gt;filter&#x3D;deactivatedbyname_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;cbtid_eq_value&lt;br&gt;filter&#x3D;price_eq_1&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;starttime_eq_1700230366179&lt;br&gt;filter&#x3D;_endtime_eq_1700230366179&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAccountService]
  describe 'get_account_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_activities
  # Get activities.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;userAgent_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;body_a&lt;br&gt;sort&#x3D;httpMethod_a&lt;br&gt;sort&#x3D;parameters_a&lt;br&gt;sort&#x3D;uri_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;deprecatedResource_a&lt;br&gt;sort&#x3D;accept_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1700230366162&lt;br&gt;filter&#x3D;useragent_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;body_eq_value&lt;br&gt;filter&#x3D;httpmethod_eq_get&lt;br&gt;filter&#x3D;parameters_eq_value&lt;br&gt;filter&#x3D;uri_eq_value&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;deprecatedresource_eq_true&lt;br&gt;filter&#x3D;accept_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIActivity]
  describe 'get_activities test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_additional_users
  # Get additional users.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;lastName_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;firstName_a&lt;br&gt;sort&#x3D;serviceIds_a&lt;br&gt;sort&#x3D;mainUserId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;deleteTime_a&lt;br&gt;sort&#x3D;accountServiceIds_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;email_a&lt;br&gt;sort&#x3D;status_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;lastname_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;firstname_eq_value&lt;br&gt;filter&#x3D;serviceids_eq_1&lt;br&gt;filter&#x3D;mainuserid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364459&lt;br&gt;filter&#x3D;deletetime_eq_1700230364459&lt;br&gt;filter&#x3D;accountserviceids_eq_1&lt;br&gt;filter&#x3D;ismainuser_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;email_eq_value&lt;br&gt;filter&#x3D;status_eq_inactive
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUser]
  describe 'get_additional_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_admin_device
  # Get device.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAdminDevice]
  describe 'get_admin_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_admin_test_runs
  # Get device session statistics.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :days 
  # @return [APIAdminDeviceSessionStatistics]
  describe 'get_admin_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_admin_test_runs1
  # Get test runs.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230365771&lt;br&gt;filter&#x3D;starttime_eq_1700230365771&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminTestRun]
  describe 'get_admin_test_runs1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_billing_periods
  # Get billing periods.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;additionalHoursPrice_a&lt;br&gt;sort&#x3D;mail_a&lt;br&gt;sort&#x3D;totalPrice_a&lt;br&gt;sort&#x3D;startBillingPeriod_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;_endBillingPeriod_a&lt;br&gt;sort&#x3D;subscriptionEnd_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;servicePrice_a&lt;br&gt;sort&#x3D;lastPaymentDate_a&lt;br&gt;sort&#x3D;subscriptionStart_a&lt;br&gt;sort&#x3D;additionalHours_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;additionalHoursPaymentDate_a&lt;br&gt;sort&#x3D;paymentDate_a&lt;br&gt;sort&#x3D;plan_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;additionalhoursprice_eq_1&lt;br&gt;filter&#x3D;mail_eq_value&lt;br&gt;filter&#x3D;totalprice_eq_1&lt;br&gt;filter&#x3D;startbillingperiod_eq_1700230366157&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;_endbillingperiod_eq_1700230366157&lt;br&gt;filter&#x3D;subscriptionend_eq_1700230366157&lt;br&gt;filter&#x3D;createtime_eq_1700230366157&lt;br&gt;filter&#x3D;serviceprice_eq_1&lt;br&gt;filter&#x3D;lastpaymentdate_eq_1700230366157&lt;br&gt;filter&#x3D;paid_eq_true&lt;br&gt;filter&#x3D;subscriptionstart_eq_1700230366157&lt;br&gt;filter&#x3D;additionalhours_eq_1&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;plan_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIBillingPeriod]
  describe 'get_all_billing_periods test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_test_run_device_session_steps
  # Get device session steps of all device sessions in run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_all_test_run_device_session_steps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_test_run_device_session_steps1
  # Get device session steps of all device sessions in run.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_all_test_run_device_session_steps1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_test_run_device_session_steps2
  # Get device session steps of all device sessions in run.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_all_test_run_device_session_steps2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_label
  # Get label.
  # @param group_id 
  # @param label_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceProperty]
  describe 'get_api_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_label_group
  # Get label group.
  # @param group_id 
  # @param [Hash] opts the optional parameters
  # @return [APILabelGroup]
  describe 'get_api_label_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_property
  # Get property.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'get_api_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_frameworks
  # Get available frameworks.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;canRunFromUI_a&lt;br&gt;sort&#x3D;retryable_a&lt;br&gt;sort&#x3D;skipQueue_a&lt;br&gt;sort&#x3D;forProjects_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;labelId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;jobConfigId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelName_a&lt;br&gt;sort&#x3D;secured_a&lt;br&gt;sort&#x3D;skipOlderSdk_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;canrunfromui_eq_true&lt;br&gt;filter&#x3D;retryable_eq_true&lt;br&gt;filter&#x3D;skipqueue_eq_true&lt;br&gt;filter&#x3D;forprojects_eq_true&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;type_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;labelid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364439&lt;br&gt;filter&#x3D;jobconfigid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelname_eq_value&lt;br&gt;filter&#x3D;secured_eq_true&lt;br&gt;filter&#x3D;skipoldersdk_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIFramework]
  describe 'get_available_frameworks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_services
  # Get available services.
  # For logged in users
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;pricePerHour_a&lt;br&gt;sort&#x3D;centPrice_a&lt;br&gt;sort&#x3D;customPlan_a&lt;br&gt;sort&#x3D;includedHours_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;commonId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;activated_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230363752&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;activatetime_eq_1700230363752&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;priceperhour_eq_1&lt;br&gt;filter&#x3D;centprice_eq_1&lt;br&gt;filter&#x3D;customplan_eq_true&lt;br&gt;filter&#x3D;includedhours_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;commonid_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;activated_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIService]
  describe 'get_available_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_services1
  # Get available services.
  # For not logged in users
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;pricePerHour_a&lt;br&gt;sort&#x3D;centPrice_a&lt;br&gt;sort&#x3D;customPlan_a&lt;br&gt;sort&#x3D;includedHours_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;commonId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;activated_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230364570&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;activatetime_eq_1700230364571&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;priceperhour_eq_1&lt;br&gt;filter&#x3D;centprice_eq_1&lt;br&gt;filter&#x3D;customplan_eq_true&lt;br&gt;filter&#x3D;includedhours_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;commonid_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;activated_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIService]
  describe 'get_available_services1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ban_application
  # Get property of banned application.
  # @param test_run_id 
  # @param [Hash] opts the optional parameters
  # @return [APIProperty]
  describe 'get_ban_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_billing_period
  # Get billing period.
  # @param user_id 
  # @param billing_period_id 
  # @param [Hash] opts the optional parameters
  # @return [APIBillingPeriod]
  describe 'get_billing_period test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_browser
  # Get browser.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIBrowser]
  describe 'get_browser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_browsers
  # Get browsers.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;version_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIBrowser]
  describe 'get_browsers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel_scopes
  # Get notification scopes for user and channel.
  # @param channel 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIEnum]
  describe 'get_channel_scopes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channels
  # Get notification channels.
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIEnum]
  describe 'get_channels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cluster_by_id
  # Get cluster.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_devices 
  # @return [APICluster]
  describe 'get_cluster_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cluster_devices
  # Get cluster devices.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;cluster.name_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;manufacturer_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;mainUserId_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;fingerprint_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;dedicationEndTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1700230365659&lt;br&gt;filter&#x3D;cluster.name_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;platform_eq_ios&lt;br&gt;filter&#x3D;manufacturer_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;mainuserid_eq_1&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;statetime_eq_1700230365659&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;fingerprint_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;dedicationendtime_eq_1700230365659&lt;br&gt;filter&#x3D;devicecleanupconfigurationid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;locked_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDevice]
  describe 'get_cluster_devices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_clusters
  # Get clusters.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;ipAddress_a&lt;br&gt;sort&#x3D;jenkinsVersion_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;url_a&lt;br&gt;sort&#x3D;pluginVersion_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;location_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;region_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1700230365631&lt;br&gt;filter&#x3D;ipaddress_eq_value&lt;br&gt;filter&#x3D;jenkinsversion_eq_value&lt;br&gt;filter&#x3D;type_eq_bare_metal&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;url_eq_value&lt;br&gt;filter&#x3D;pluginversion_eq_value&lt;br&gt;filter&#x3D;statetime_eq_1700230365631&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;location_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_offline&lt;br&gt;filter&#x3D;region_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPICluster]
  describe 'get_clusters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_criteria
  # Get device model criteria.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceModelCriterion]
  describe 'get_criteria test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step
  # Get current device session step.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step1
  # Get current device session step.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step2
  # Get current device session step.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step3
  # Get current device session step.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_desktop_browser_capabilities
  # Get desktop browser capabilities.
  # @param [Hash] opts the optional parameters
  # @return [APIDesktopBrowserCapabilities]
  describe 'get_desktop_browser_capabilities test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device
  # Get device.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_dedicated 
  # @option opts [BOOLEAN] :with_disabled 
  # @option opts [BOOLEAN] :with_browsers 
  # @return [APIDevice]
  describe 'get_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_browsers
  # Get device browsers.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;version_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIBrowser]
  describe 'get_device_browsers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_cleanup_configuration
  # Get device specific cleanup configuration.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'get_device_cleanup_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_cleanup_configuration1
  # Get device cleanup configuration.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'get_device_cleanup_configuration1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_cleanup_configurations
  # Get device cleanup configurations.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createdByEmail_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;lastModificationTime_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;global_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;content_a&lt;br&gt;sort&#x3D;createdById_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;discriminator_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createdbyemail_eq_value&lt;br&gt;filter&#x3D;createtime_eq_1700230365974&lt;br&gt;filter&#x3D;lastmodificationtime_eq_1700230365974&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;global_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;content_eq_value&lt;br&gt;filter&#x3D;createdbyid_eq_1&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;discriminator_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceCleanupConfiguration]
  describe 'get_device_cleanup_configurations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group
  # Get device group.
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceGroup]
  describe 'get_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group_devices
  # Get device group devices.
  # @param user_id 
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_properties 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;creditsPrice_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;device.archiveTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;locked_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;platform_a&lt;br&gt;sort&#x3D;manufacturer_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;creditsprice_eq_1&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;online_eq_true&lt;br&gt;filter&#x3D;location_eq_value&lt;br&gt;filter&#x3D;device.archivetime_eq_1700230364388&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;locked_eq_true&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;platform_eq_ios&lt;br&gt;filter&#x3D;manufacturer_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDevice]
  describe 'get_device_group_devices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group_devices1
  # Get device group devices.
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_properties 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;creditsPrice_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;device.archiveTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;locked_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;platform_a&lt;br&gt;sort&#x3D;manufacturer_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;creditsprice_eq_1&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;online_eq_true&lt;br&gt;filter&#x3D;location_eq_value&lt;br&gt;filter&#x3D;device.archivetime_eq_1700230365585&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;locked_eq_true&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;platform_eq_ios&lt;br&gt;filter&#x3D;manufacturer_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDevice]
  describe 'get_device_group_devices1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group_selectors
  # Get device group selectors.
  # @param user_id 
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_device_group_selectors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_group_selectors1
  # Get device group selectors.
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_device_group_selectors1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_groups
  # Get device groups.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceGroup]
  describe 'get_device_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_labels
  # Get device labels.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_device_labels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_labels1
  # Get device labels.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_device_labels1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_model_browsers
  # Get device model browsers.
  # @param device_model_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;version_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIBrowser]
  describe 'get_device_model_browsers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_model_browsers1
  # Get device model browsers.
  # @param serial_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;version_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIBrowser]
  describe 'get_device_model_browsers1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_model_pool
  # Get device model pool.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceModelPool]
  describe 'get_device_model_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_model_pool_statistics
  # Get device model pools statistics.
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceModelPoolStatistics]
  describe 'get_device_model_pool_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_model_pools
  # Get device model pools.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;retentionStrategy_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;location_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;enabled_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;retentionstrategy_eq_cluster_on_off&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;location_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;enabled_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceModelPool]
  describe 'get_device_model_pools test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_models
  # Get device models.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_sessions_info 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;releaseVersion_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;platform_a&lt;br&gt;sort&#x3D;total_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;online_a&lt;br&gt;sort&#x3D;location_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;dedicated_eq_true&lt;br&gt;filter&#x3D;releaseversion_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;platform_eq_ios&lt;br&gt;filter&#x3D;total_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;online_eq_1&lt;br&gt;filter&#x3D;location_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDeviceModel]
  describe 'get_device_models test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_picker
  # Get device properties.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicefiltergroup.name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIDevicePicker]
  describe 'get_device_picker test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_problems
  # Get device problems.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;clusterName_a&lt;br&gt;sort&#x3D;clusterId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;deviceId_a&lt;br&gt;sort&#x3D;deviceName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;clustername_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;clusterid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;deviceid_eq_1&lt;br&gt;filter&#x3D;devicename_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDeviceProblem]
  describe 'get_device_problems test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_properties
  # Get device properties.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_device_properties test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_queue
  # Get device queue.
  # Ignores sort value. Sorts by order in queue.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;startedByDisplayName_a&lt;br&gt;sort&#x3D;currentStepType_a&lt;br&gt;sort&#x3D;deviceModel.id_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;priority_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230365957&lt;br&gt;filter&#x3D;startedbydisplayname_eq_value&lt;br&gt;filter&#x3D;currentsteptype_eq_waiting&lt;br&gt;filter&#x3D;devicemodel.id_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;priority_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365957&lt;br&gt;filter&#x3D;starttime_eq_1700230365957&lt;br&gt;filter&#x3D;_endtime_eq_1700230365957&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;testrunname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDeviceSession]
  describe 'get_device_queue test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session
  # Get device session.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Integer] :test_run_id 
  # @return [APIDeviceSession]
  describe 'get_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_commands
  # Get device session commands.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPICommand]
  describe 'get_device_session_commands test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_commands1
  # Get device session commands.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPICommand]
  describe 'get_device_session_commands1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_commands2
  # Get device session commands.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPICommand]
  describe 'get_device_session_commands2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_commands3
  # Get device session commands.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPICommand]
  describe 'get_device_session_commands3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_connections
  # Get connections for device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;path_a&lt;br&gt;sort&#x3D;password_a&lt;br&gt;sort&#x3D;urlSchema_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;port_a&lt;br&gt;sort&#x3D;host_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;path_eq_value&lt;br&gt;filter&#x3D;password_eq_value&lt;br&gt;filter&#x3D;urlschema_eq_value&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364360&lt;br&gt;filter&#x3D;port_eq_1&lt;br&gt;filter&#x3D;host_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230364360&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIConnection]
  describe 'get_device_session_connections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_connections1
  # Get connections for device session.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;path_a&lt;br&gt;sort&#x3D;password_a&lt;br&gt;sort&#x3D;urlSchema_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;port_a&lt;br&gt;sort&#x3D;host_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;path_eq_value&lt;br&gt;filter&#x3D;password_eq_value&lt;br&gt;filter&#x3D;urlschema_eq_value&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365550&lt;br&gt;filter&#x3D;port_eq_1&lt;br&gt;filter&#x3D;host_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230365550&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIConnection]
  describe 'get_device_session_connections1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_history
  # Get device sessions.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;startedByDisplayName_a&lt;br&gt;sort&#x3D;currentStepType_a&lt;br&gt;sort&#x3D;deviceModel.id_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;priority_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230366086&lt;br&gt;filter&#x3D;startedbydisplayname_eq_value&lt;br&gt;filter&#x3D;currentsteptype_eq_waiting&lt;br&gt;filter&#x3D;devicemodel.id_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;priority_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230366086&lt;br&gt;filter&#x3D;starttime_eq_1700230366086&lt;br&gt;filter&#x3D;_endtime_eq_1700230366086&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;testrunname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDeviceSession]
  describe 'get_device_session_history test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshot
  # Get device session screenshot.
  # @param run_id 
  # @param device_session_id 
  # @param screenshot_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @return [nil]
  describe 'get_device_session_screenshot test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshot1
  # Get device session screenshot.
  # @param device_session_id 
  # @param screenshot_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Integer] :test_run_id 
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @return [nil]
  describe 'get_device_session_screenshot1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshots
  # Get device session screenshots.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshot]
  describe 'get_device_session_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_screenshots1
  # Get device session screenshots.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Integer] :test_run_id 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshot]
  describe 'get_device_session_screenshots1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_step
  # Get device session step.
  # @param run_id 
  # @param device_session_id 
  # @param device_session_step_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_device_session_step test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_step1
  # Get device session step.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param device_session_step_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_device_session_step1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_step2
  # Get device session step.
  # @param device_session_id 
  # @param device_session_step_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_device_session_step2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps
  # Get device session steps.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_device_session_steps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps1
  # Get device session steps.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_device_session_steps1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps2
  # Get device session steps.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_device_session_steps2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps3
  # Get device session steps.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_device_session_steps3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps_with_params
  # Get device session steps.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Integer] :test_run_id 
  # @return [APIListAPITestCaseRun]
  describe 'get_device_session_steps_with_params test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_test_case_runs
  # Get device session steps.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPITestCaseRun]
  describe 'get_device_session_test_case_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_test_case_runs1
  # Get device session steps.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPITestCaseRun]
  describe 'get_device_session_test_case_runs1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_test_case_runs2
  # Get device session steps.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPITestCaseRun]
  describe 'get_device_session_test_case_runs2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_with_project
  # Get device session.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'get_device_session_with_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_with_run
  # Get device session.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'get_device_session_with_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_sessions
  # Get device sessions.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;clientSideId_a&lt;br&gt;sort&#x3D;externalId_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;biometricInstrumentation_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;projectId_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;clientsideid_eq_value&lt;br&gt;filter&#x3D;externalid_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364086&lt;br&gt;filter&#x3D;biometricinstrumentation_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1700230364086&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230364086&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;projectid_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_null
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSession]
  describe 'get_device_sessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_sessions1
  # Get device sessions.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;clientSideId_a&lt;br&gt;sort&#x3D;externalId_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;biometricInstrumentation_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;projectId_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;clientsideid_eq_value&lt;br&gt;filter&#x3D;externalid_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364841&lt;br&gt;filter&#x3D;biometricinstrumentation_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1700230364841&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230364841&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;projectid_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_null
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSession]
  describe 'get_device_sessions1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_statistics
  # Get device statistics.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [BOOLEAN] :skip_common_project 
  # @option opts [BOOLEAN] :skip_shared 
  # @option opts [String] :mode 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;failedRatio_a&lt;br&gt;sort&#x3D;passedTests_a&lt;br&gt;sort&#x3D;releaseVersion_a&lt;br&gt;sort&#x3D;failedTests_a&lt;br&gt;sort&#x3D;passedRatio_a&lt;br&gt;sort&#x3D;deviceName_a&lt;br&gt;sort&#x3D;usageCount_a&lt;br&gt;sort&#x3D;totalTests_a&lt;br&gt;sort&#x3D;failedDevices_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;usageMillis_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;releaseversion_eq_value&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;devicename_eq_value&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230364268&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceStatistic]
  describe 'get_device_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_statistics1
  # Get device statistics.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :skip_common_project 
  # @option opts [String] :mode 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;failedRatio_a&lt;br&gt;sort&#x3D;passedTests_a&lt;br&gt;sort&#x3D;releaseVersion_a&lt;br&gt;sort&#x3D;failedTests_a&lt;br&gt;sort&#x3D;passedRatio_a&lt;br&gt;sort&#x3D;deviceName_a&lt;br&gt;sort&#x3D;usageCount_a&lt;br&gt;sort&#x3D;totalTests_a&lt;br&gt;sort&#x3D;failedDevices_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;usageMillis_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;releaseversion_eq_value&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;devicename_eq_value&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230365460&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceStatistic]
  describe 'get_device_statistics1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_statuses
  # Get device statuses.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;internalStorage_a&lt;br&gt;sort&#x3D;tdsVersion_a&lt;br&gt;sort&#x3D;alarmOn_a&lt;br&gt;sort&#x3D;externalStorage_a&lt;br&gt;sort&#x3D;monitoringOn_a&lt;br&gt;sort&#x3D;deviceTime_a&lt;br&gt;sort&#x3D;deviceId_a&lt;br&gt;sort&#x3D;deviceName_a&lt;br&gt;sort&#x3D;ssid_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;internetAccess_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;clusterName_a&lt;br&gt;sort&#x3D;emailAccount_a&lt;br&gt;sort&#x3D;bluetoothOn_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;mockLocationOn_a&lt;br&gt;sort&#x3D;batteryLevel_a&lt;br&gt;sort&#x3D;locationServiceOn_a&lt;br&gt;sort&#x3D;testExecuting_a&lt;br&gt;sort&#x3D;screenLocked_a&lt;br&gt;sort&#x3D;updateTime_a&lt;br&gt;sort&#x3D;sdcardPresent_a&lt;br&gt;sort&#x3D;aslOn_a&lt;br&gt;sort&#x3D;deviceTimeZone_a&lt;br&gt;sort&#x3D;device.archiveTime_a&lt;br&gt;sort&#x3D;flashOn_a&lt;br&gt;sort&#x3D;tetheringOn_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;internalstorage_eq_1&lt;br&gt;filter&#x3D;tdsversion_eq_value&lt;br&gt;filter&#x3D;alarmon_eq_true&lt;br&gt;filter&#x3D;externalstorage_eq_1&lt;br&gt;filter&#x3D;monitoringon_eq_true&lt;br&gt;filter&#x3D;devicetime_eq_1&lt;br&gt;filter&#x3D;deviceid_eq_1&lt;br&gt;filter&#x3D;devicename_eq_value&lt;br&gt;filter&#x3D;ssid_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;internetaccess_eq_true&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;clustername_eq_value&lt;br&gt;filter&#x3D;emailaccount_eq_value&lt;br&gt;filter&#x3D;bluetoothon_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;mocklocationon_eq_true&lt;br&gt;filter&#x3D;batterylevel_eq_1&lt;br&gt;filter&#x3D;locationserviceon_eq_true&lt;br&gt;filter&#x3D;testexecuting_eq_true&lt;br&gt;filter&#x3D;screenlocked_eq_true&lt;br&gt;filter&#x3D;sdcardpresent_eq_true&lt;br&gt;filter&#x3D;aslon_eq_true&lt;br&gt;filter&#x3D;devicetimezone_eq_value&lt;br&gt;filter&#x3D;device.archivetime_eq_1700230366053&lt;br&gt;filter&#x3D;flashon_eq_true&lt;br&gt;filter&#x3D;tetheringon_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceStatus]
  describe 'get_device_statuses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_count_session_report
  # Get device time, counted testRuns and deviceSessions per day, user, project, deviceModel.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; 
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;starttime_eq_1700230366077&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230366077&lt;br&gt;filter&#x3D;projectname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceTimeCountSessionReportEntry]
  describe 'get_device_time_count_session_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_history
  # Get device time history.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;starttime_eq_1700230366066&lt;br&gt;filter&#x3D;_endtime_eq_1700230366066&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;username_eq_value&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserDeviceTime]
  describe 'get_device_time_history test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_history_summary
  # Get device time summary.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;starttime_eq_1700230366080&lt;br&gt;filter&#x3D;_endtime_eq_1700230366080&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;username_eq_value&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIUserDeviceTimeSummary]
  describe 'get_device_time_history_summary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_time_step_time_report
  # Get device preparing and waiting time per day, user, project, deviceModel.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; 
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;starttime_eq_1700230366072&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230366072&lt;br&gt;filter&#x3D;projectname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceTimeStepTimeReportEntry]
  describe 'get_device_time_step_time_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_type
  # Get device frame.
  # @param device_type_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAdminDeviceType]
  describe 'get_device_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_types
  # Get device frames.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;imagePrefix_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;imageprefix_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDeviceType]
  describe 'get_device_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_devices
  # Get devices.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_disabled 
  # @option opts [BOOLEAN] :with_dedicated 
  # @option opts [BOOLEAN] :with_browsers 
  # @option opts [BOOLEAN] :with_properties 
  # @option opts [BOOLEAN] :with_supported_creators 
  # @option opts [BOOLEAN] :live_testing_only 
  # @option opts [BOOLEAN] :only_with_browsers 
  # @option opts [Array<Integer>] :label_ids 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;creditsPrice_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;device.archiveTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;locked_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;platform_a&lt;br&gt;sort&#x3D;manufacturer_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;creditsprice_eq_1&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;online_eq_true&lt;br&gt;filter&#x3D;location_eq_value&lt;br&gt;filter&#x3D;device.archivetime_eq_1700230365397&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;locked_eq_true&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;platform_eq_ios&lt;br&gt;filter&#x3D;manufacturer_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDevice]
  describe 'get_devices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_devices1
  # Get devices.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_disabled 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;cluster.name_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;manufacturer_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;mainUserId_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;fingerprint_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;dedicationEndTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1700230365935&lt;br&gt;filter&#x3D;cluster.name_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;platform_eq_ios&lt;br&gt;filter&#x3D;manufacturer_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;mainuserid_eq_1&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;statetime_eq_1700230365935&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;fingerprint_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;dedicationendtime_eq_1700230365935&lt;br&gt;filter&#x3D;devicecleanupconfigurationid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;locked_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDevice]
  describe 'get_devices1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_devices_used_device_cleanup_configuration
  # Get devices used given device cleanup configuration.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;stateChangeTime_a&lt;br&gt;sort&#x3D;cluster.name_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;enabled_a&lt;br&gt;sort&#x3D;manufacturer_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;mainUserId_a&lt;br&gt;sort&#x3D;serialId_a&lt;br&gt;sort&#x3D;stateTime_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;fingerprint_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;dedicationEndTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;statechangetime_eq_1700230365989&lt;br&gt;filter&#x3D;cluster.name_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;enabled_eq_true&lt;br&gt;filter&#x3D;platform_eq_ios&lt;br&gt;filter&#x3D;manufacturer_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;mainuserid_eq_1&lt;br&gt;filter&#x3D;serialid_eq_value&lt;br&gt;filter&#x3D;statetime_eq_1700230365989&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;fingerprint_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;dedicationendtime_eq_1700230365989&lt;br&gt;filter&#x3D;devicecleanupconfigurationid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_offline_cleaning&lt;br&gt;filter&#x3D;locked_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminDevice]
  describe 'get_devices_used_device_cleanup_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_emails
  # Get emails.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;subject_a&lt;br&gt;sort&#x3D;lastRetryTime_a&lt;br&gt;sort&#x3D;channel_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;sent_a&lt;br&gt;sort&#x3D;userId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;createtime_eq_1700230365926&lt;br&gt;filter&#x3D;subject_eq_value&lt;br&gt;filter&#x3D;lastretrytime_eq_1700230365926&lt;br&gt;filter&#x3D;channel_eq_slack&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;sent_eq_true&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminEmail]
  describe 'get_emails test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_enums
  # Get enums.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Array<String>>]
  describe 'get_enums test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_errors
  # Get errors.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;quantity_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;quantity_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_abort_request&lt;br&gt;filter&#x3D;timestamp_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminError]
  describe 'get_errors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_properties
  # Get file properties.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;id_a&lt;br&gt;sort&#x3D;value_a&lt;br&gt;sort&#x3D;key_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;value_eq_value&lt;br&gt;filter&#x3D;key_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFileProperty]
  describe 'get_file_properties test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_property
  # Get file property.
  # @param file_id 
  # @param property_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUserFileProperty]
  describe 'get_file_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_tags
  # Get file tags.
  # @param user_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFileTag]
  describe 'get_file_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_tags1
  # Get file tags.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFileTag]
  describe 'get_file_tags1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_files
  # Get files.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365359&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_files_for_device_session_by_tag
  # Get device session output files.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364167&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_files_for_device_session_by_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework
  # Get framework.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIFramework]
  describe 'get_framework test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_available_labels
  # Get available framework labels.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_framework_available_labels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_config
  # Get framework&#x27;s config.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIProjectJobConfig]
  describe 'get_framework_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_roles
  # Get roles required by framework.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;name_eq_admin&lt;br&gt;filter&#x3D;id_eq_null
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIRole]
  describe 'get_framework_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_framework_statistics
  # Get framework statistics.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :days 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;releaseVersion_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;releaseversion_eq_value&lt;br&gt;filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;starttime_eq_1700230365734&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230365734&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminFrameworkStatistics]
  describe 'get_framework_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_frameworks
  # Get frameworks.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;canRunFromUI_a&lt;br&gt;sort&#x3D;retryable_a&lt;br&gt;sort&#x3D;skipQueue_a&lt;br&gt;sort&#x3D;forProjects_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;labelId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;jobConfigId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelName_a&lt;br&gt;sort&#x3D;secured_a&lt;br&gt;sort&#x3D;skipOlderSdk_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;canrunfromui_eq_true&lt;br&gt;filter&#x3D;retryable_eq_true&lt;br&gt;filter&#x3D;skipqueue_eq_true&lt;br&gt;filter&#x3D;forprojects_eq_true&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;type_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;labelid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365861&lt;br&gt;filter&#x3D;jobconfigid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelname_eq_value&lt;br&gt;filter&#x3D;secured_eq_true&lt;br&gt;filter&#x3D;skipoldersdk_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIFramework]
  describe 'get_frameworks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_health_check
  # Get health check.
  # @param [Hash] opts the optional parameters
  # @return [APIHealthCheck]
  describe 'get_health_check test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_hubs
  # Get appium broker hubs (location and url).
  # @param [Hash] opts the optional parameters
  # @return [APISimpleListAPIBrokerHub]
  describe 'get_hubs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_inspector_device_session_connection
  # Get connection for device session.
  # @param device_session_id 
  # @param connection_id 
  # @param [Hash] opts the optional parameters
  # @return [APIConnection]
  describe 'get_inspector_device_session_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_inspector_device_sessions
  # Get device sessions.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_properties 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;clientSideId_a&lt;br&gt;sort&#x3D;externalId_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;biometricInstrumentation_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;projectId_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;clientsideid_eq_value&lt;br&gt;filter&#x3D;externalid_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364288&lt;br&gt;filter&#x3D;biometricinstrumentation_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1700230364288&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230364288&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;projectid_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_null
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSession]
  describe 'get_inspector_device_sessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_interactive_queue
  # Get manual sessions queue.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;deviceModelName_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;billable_a&lt;br&gt;sort&#x3D;deviceId_a&lt;br&gt;sort&#x3D;deviceName_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;deviceModelId_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicemodelname_eq_value&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;billable_eq_true&lt;br&gt;filter&#x3D;deviceid_eq_1&lt;br&gt;filter&#x3D;devicename_eq_value&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365850&lt;br&gt;filter&#x3D;devicemodelid_eq_1&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;starttime_eq_1700230365850&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230365850&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminInteractiveDeviceSession]
  describe 'get_interactive_queue test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_label_groups
  # Get label groups.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPILabelGroup]
  describe 'get_label_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_labels
  # Get labels.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_labels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_labels1
  # Get labels.
  # @param group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;propertyGroupName_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;propertyGroupId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelGroupName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;propertygroupname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;propertygroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelgroupname_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceProperty]
  describe 'get_labels1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_license
  # Get license installed to cloud.
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'get_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_license1
  # Get license.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'get_license1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_licenses
  # Get licenses.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;expireTime_a&lt;br&gt;sort&#x3D;closeTime_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;privateInstance_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;status_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;expiretime_eq_1700230365836&lt;br&gt;filter&#x3D;closetime_eq_1700230365836&lt;br&gt;filter&#x3D;activatetime_eq_1700230365836&lt;br&gt;filter&#x3D;privateinstance_eq_true&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;status_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPILicense]
  describe 'get_licenses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_list
  # Get access groups.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;scope_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;scope_eq_user&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAccessGroup]
  describe 'get_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_list1
  # Get access groups.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;scope_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;scope_eq_user&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAccessGroup]
  describe 'get_list1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_maintenance
  # Get maintenance mode.
  # @param [Hash] opts the optional parameters
  # @return [APIMaintenance]
  describe 'get_maintenance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files
  # Get files for device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364352&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_output_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files_for_device_session_by_tag
  # Get device session output files.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364930&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_output_files_for_device_session_by_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files_for_device_session_by_tag1
  # Get device session output files.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365543&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_output_files_for_device_session_by_tag1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files_for_projects_runs_device_session
  # Get device session output files.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365281&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_output_files_for_projects_runs_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project
  # Get project.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [APIProject]
  describe 'get_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_screenshot
  # Get device session screenshot.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param screenshot_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @return [nil]
  describe 'get_project_device_session_screenshot test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_session_screenshots
  # Get device session screenshots.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshot]
  describe 'get_project_device_session_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_device_sessions
  # Get device sessions.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;clientSideId_a&lt;br&gt;sort&#x3D;externalId_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;biometricInstrumentation_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;projectId_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;clientsideid_eq_value&lt;br&gt;filter&#x3D;externalid_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365198&lt;br&gt;filter&#x3D;biometricinstrumentation_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1700230365198&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230365198&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;projectid_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_null
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSession]
  describe 'get_project_device_sessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_test_run_tags
  # Get test run tags.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITag]
  describe 'get_project_test_run_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_test_run_with_project
  # Get test run.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'get_project_test_run_with_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_test_runs
  # Get test runs.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230365041&lt;br&gt;filter&#x3D;starttime_eq_1700230365041&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITestRun]
  describe 'get_project_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_projects
  # Get projects.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;sharedByEmail_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230364959&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230364959&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;readonly_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;sharedbyemail_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIProject]
  describe 'get_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_properties
  # Get properties.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;updatedByDisplayName_a&lt;br&gt;sort&#x3D;fromTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;updateTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;updatedById_a&lt;br&gt;sort&#x3D;value_a&lt;br&gt;sort&#x3D;toTime_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;updatedbydisplayname_eq_value&lt;br&gt;filter&#x3D;fromtime_eq_1700230364946&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;updatetime_eq_1700230364946&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;updatedbyid_eq_1&lt;br&gt;filter&#x3D;value_eq_value&lt;br&gt;filter&#x3D;totime_eq_1700230364946
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIProperty]
  describe 'get_properties test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_receipt
  # Get purchased service receipt.
  # @param user_id 
  # @param billing_period_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_receipt test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource
  # Get access group resource.
  # @param user_id 
  # @param access_group_id 
  # @param resource_id 
  # @param [Hash] opts the optional parameters
  # @return [APISharedResource]
  describe 'get_resource test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource1
  # Get access group resource.
  # @param access_group_id 
  # @param resource_id 
  # @param [Hash] opts the optional parameters
  # @return [APISharedResource]
  describe 'get_resource1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resources
  # Get access group resources.
  # @param user_id 
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;resourceId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;resourceid_eq_1&lt;br&gt;filter&#x3D;accessgroupid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_device_group
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPISharedResource]
  describe 'get_resources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resources1
  # Get access group resources.
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;resourceId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;resourceid_eq_1&lt;br&gt;filter&#x3D;accessgroupid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_device_group
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPISharedResource]
  describe 'get_resources1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_roles
  # Get roles.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :without_priorities 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIRole]
  describe 'get_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sample_files
  # Get sample files.
  # Sample files
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230365764&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_sample_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_scopes
  # Get notification scopes.
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIEnum]
  describe 'get_scopes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_screenshot_names
  # Get screenshot names.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIScreenshot]
  describe 'get_screenshot_names test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_screenshot_names1
  # Get screenshot names.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIScreenshot]
  describe 'get_screenshot_names1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_screenshot_names2
  # Get screenshot names.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIScreenshot]
  describe 'get_screenshot_names2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_service
  # Get service.
  # @param service_id 
  # @param [Hash] opts the optional parameters
  # @return [APIService]
  describe 'get_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_services
  # Get services.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :in_use 
  # @option opts [BOOLEAN] :not_archived 
  # @option opts [BOOLEAN] :active_only 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;pricePerHour_a&lt;br&gt;sort&#x3D;centPrice_a&lt;br&gt;sort&#x3D;customPlan_a&lt;br&gt;sort&#x3D;includedHours_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;commonId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;activated_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230365751&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;activatetime_eq_1700230365751&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;priceperhour_eq_1&lt;br&gt;filter&#x3D;centprice_eq_1&lt;br&gt;filter&#x3D;customplan_eq_true&lt;br&gt;filter&#x3D;includedhours_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;commonid_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;activated_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIService]
  describe 'get_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_settings
  # Get settings.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_vulnerable_data 
  # @return [Hash<String, String>]
  describe 'get_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_specific_device_cleanup_configuration
  # Get specific device cleanup configuration.
  # @param serial_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceCleanupConfiguration]
  describe 'get_specific_device_cleanup_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_specific_device_cleanup_configuration1
  # Delete device cleanup configuration.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_specific_device_cleanup_configuration1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_status
  # Get basic cloud info.
  # @param [Hash] opts the optional parameters
  # @return [APICloudInfo]
  describe 'get_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_system_overview
  # Get overview status.
  # @param [Hash] opts the optional parameters
  # @return [APIAdminOverview]
  describe 'get_system_overview test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run
  # Get test run.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [APITestRun]
  describe 'get_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_data_availability_with_project
  # Get test run data availability.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRunDataAvailability]
  describe 'get_test_run_data_availability_with_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_data_availability_with_test_run
  # Get test run data availability.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :user_id 
  # @option opts [Integer] :project_id 
  # @return [APITestRunDataAvailability]
  describe 'get_test_run_data_availability_with_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_data_availability_with_user
  # Get test run data availability.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRunDataAvailability]
  describe 'get_test_run_data_availability_with_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_screenshots
  # Get test run screenshots by name.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshotExtended]
  describe 'get_test_run_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_screenshots1
  # Get test run screenshots by name.
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshotExtended]
  describe 'get_test_run_screenshots1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_screenshots2
  # Get test run screenshots by name.
  # @param project_id 
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshotExtended]
  describe 'get_test_run_screenshots2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tag
  # Get test run tag.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'get_test_run_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tag1
  # Get test run tag.
  # @param project_id 
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'get_test_run_tag1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tag_with_run
  # Get test run tag.
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [APITag]
  describe 'get_test_run_tag_with_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tags
  # Get test run tags.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITag]
  describe 'get_test_run_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tags1
  # Get test run tags.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITag]
  describe 'get_test_run_tags1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_runs
  # Get test runs.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230364648&lt;br&gt;filter&#x3D;starttime_eq_1700230364648&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITestRun]
  describe 'get_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_trial_statistics
  # Get trial statistics.
  # @param from_time 
  # @param to_time 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;country_a&lt;br&gt;sort&#x3D;organization_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;email_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;country_eq_value&lt;br&gt;filter&#x3D;organization_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_value&lt;br&gt;filter&#x3D;email_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAdminTrialStatistics]
  describe 'get_trial_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Get user.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user1
  # Get access group user.
  # @param user_id 
  # @param access_group_id 
  # @param participant_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'get_user1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user2
  # Get access group user.
  # @param access_group_id 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'get_user2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_active_services
  # Get active services.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;active_a&lt;br&gt;sort&#x3D;activatedByName_a&lt;br&gt;sort&#x3D;serviceName_a&lt;br&gt;sort&#x3D;deactivatedByName_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;cbtId_a&lt;br&gt;sort&#x3D;price_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;deactivatereason_eq_initial_failure&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;active_eq_true&lt;br&gt;filter&#x3D;activatedbyname_eq_value&lt;br&gt;filter&#x3D;servicename_eq_value&lt;br&gt;filter&#x3D;deactivatedbyname_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;cbtid_eq_value&lt;br&gt;filter&#x3D;price_eq_1&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;starttime_eq_1700230363766&lt;br&gt;filter&#x3D;_endtime_eq_1700230363766&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAccountService]
  describe 'get_user_active_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_billing_periods
  # Get users billing periods.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;additionalHoursPrice_a&lt;br&gt;sort&#x3D;mail_a&lt;br&gt;sort&#x3D;totalPrice_a&lt;br&gt;sort&#x3D;startBillingPeriod_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;_endBillingPeriod_a&lt;br&gt;sort&#x3D;subscriptionEnd_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;servicePrice_a&lt;br&gt;sort&#x3D;lastPaymentDate_a&lt;br&gt;sort&#x3D;subscriptionStart_a&lt;br&gt;sort&#x3D;additionalHours_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;additionalHoursPaymentDate_a&lt;br&gt;sort&#x3D;paymentDate_a&lt;br&gt;sort&#x3D;plan_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;additionalhoursprice_eq_1&lt;br&gt;filter&#x3D;mail_eq_value&lt;br&gt;filter&#x3D;totalprice_eq_1&lt;br&gt;filter&#x3D;startbillingperiod_eq_1700230364395&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;_endbillingperiod_eq_1700230364395&lt;br&gt;filter&#x3D;subscriptionend_eq_1700230364395&lt;br&gt;filter&#x3D;createtime_eq_1700230364395&lt;br&gt;filter&#x3D;serviceprice_eq_1&lt;br&gt;filter&#x3D;lastpaymentdate_eq_1700230364395&lt;br&gt;filter&#x3D;paid_eq_true&lt;br&gt;filter&#x3D;subscriptionstart_eq_1700230364395&lt;br&gt;filter&#x3D;additionalhours_eq_1&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;plan_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIBillingPeriod]
  describe 'get_user_billing_periods test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_by_recovery_key
  # Get user by recovery key.
  # @param recovery_key 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'get_user_by_recovery_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_group
  # Get device group.
  # @param user_id 
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceGroup]
  describe 'get_user_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_groups
  # Get device groups.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_public 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceGroup]
  describe 'get_user_device_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_session_screenshots
  # Get device session screenshots.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshot]
  describe 'get_user_device_session_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_session_step
  # Get device session step.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param device_session_step_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_user_device_session_step test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_session_with_users
  # Get device session.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'get_user_device_session_with_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_usage_statistics
  # Get device usage statistics.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [BOOLEAN] :skip_common_project 
  # @option opts [BOOLEAN] :skip_shared 
  # @option opts [Integer] :start_time 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;deviceSession.createTime_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;failedDeviceSessions_a&lt;br&gt;sort&#x3D;creditsPrice_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;totalDeviceSessions_a&lt;br&gt;sort&#x3D;deviceSession.userId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;manufacturer_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;devicesession.createtime_eq_1700230364248&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;creditsprice_eq_1&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;devicesession.userid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;manufacturer_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceUsage]
  describe 'get_user_device_usage_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_file
  # Get file.
  # @param user_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'get_user_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_file1
  # Get file.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'get_user_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_files
  # Get files.
  # Owned files
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364193&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_user_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_inspector_device_session
  # Get device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_properties 
  # @return [APIDeviceSession]
  describe 'get_user_inspector_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_inspector_device_session_connection
  # Get connection for device session.
  # @param user_id 
  # @param device_session_id 
  # @param connection_id 
  # @param [Hash] opts the optional parameters
  # @return [APIConnection]
  describe 'get_user_inspector_device_session_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_licenses
  # Get user licenses.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;expireTime_a&lt;br&gt;sort&#x3D;closeTime_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;privateInstance_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;status_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;expiretime_eq_1700230365671&lt;br&gt;filter&#x3D;closetime_eq_1700230365671&lt;br&gt;filter&#x3D;activatetime_eq_1700230365671&lt;br&gt;filter&#x3D;privateinstance_eq_true&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;status_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPILicense]
  describe 'get_user_licenses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_notification
  # Get notification.
  # @param user_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APINotification]
  describe 'get_user_notification test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_notifications
  # Get notifications.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;scope_a&lt;br&gt;sort&#x3D;channel_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;projectId_a&lt;br&gt;sort&#x3D;userId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;scope_eq_all&lt;br&gt;filter&#x3D;channel_eq_slack&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPINotification]
  describe 'get_user_notifications test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_project
  # Get project.
  # @param user_id 
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [APIProject]
  describe 'get_user_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_project_test_runs
  # Get test runs.
  # @param user_id 
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230363968&lt;br&gt;filter&#x3D;starttime_eq_1700230363968&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITestRun]
  describe 'get_user_project_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_projects
  # Get projects.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [BOOLEAN] :skip_common_project 
  # @option opts [BOOLEAN] :skip_shared 
  # @option opts [BOOLEAN] :show_statistics 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;sharedByEmail_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230363889&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230363889&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;readonly_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;sharedbyemail_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIProject]
  describe 'get_user_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_reserved_device_time
  # Get reserved device time.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIBasicDeviceTime]
  describe 'get_user_reserved_device_time test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_service
  # Get account service.
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountService]
  describe 'get_user_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_services
  # Get account services.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;active_a&lt;br&gt;sort&#x3D;activatedByName_a&lt;br&gt;sort&#x3D;serviceName_a&lt;br&gt;sort&#x3D;deactivatedByName_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;cbtId_a&lt;br&gt;sort&#x3D;price_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;deactivatereason_eq_initial_failure&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;active_eq_true&lt;br&gt;filter&#x3D;activatedbyname_eq_value&lt;br&gt;filter&#x3D;servicename_eq_value&lt;br&gt;filter&#x3D;deactivatedbyname_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;cbtid_eq_value&lt;br&gt;filter&#x3D;price_eq_1&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;starttime_eq_1700230365684&lt;br&gt;filter&#x3D;_endtime_eq_1700230365684&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAccountService]
  describe 'get_user_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_statistics
  # Get statistics.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [BOOLEAN] :skip_common_project 
  # @option opts [BOOLEAN] :skip_shared 
  # @option opts [Integer] :start_time 
  # @return [APIUserStatistics]
  describe 'get_user_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_test_run
  # Get test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'get_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_test_runs
  # Get test runs.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [BOOLEAN] :skip_common_project 
  # @option opts [BOOLEAN] :skip_shared 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230363880&lt;br&gt;filter&#x3D;starttime_eq_1700230363880&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITestRun]
  describe 'get_user_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_used_device_time
  # Get used device time.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIBasicDeviceTime]
  describe 'get_user_used_device_time test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # Get users.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :only_main_users 
  # @option opts [BOOLEAN] :only_with_disabled_services 
  # @option opts [String] :with_role 
  # @option opts [BOOLEAN] :with_roles 
  # @option opts [BOOLEAN] :with_address 
  # @option opts [BOOLEAN] :with_user_info 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;lastName_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;firstName_a&lt;br&gt;sort&#x3D;serviceIds_a&lt;br&gt;sort&#x3D;mainUserId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;deleteTime_a&lt;br&gt;sort&#x3D;accountServiceIds_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;email_a&lt;br&gt;sort&#x3D;status_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;lastname_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;firstname_eq_value&lt;br&gt;filter&#x3D;serviceids_eq_1&lt;br&gt;filter&#x3D;mainuserid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230363668&lt;br&gt;filter&#x3D;deletetime_eq_1700230363668&lt;br&gt;filter&#x3D;accountserviceids_eq_1&lt;br&gt;filter&#x3D;ismainuser_eq_true&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;email_eq_value&lt;br&gt;filter&#x3D;status_eq_inactive
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUser]
  describe 'get_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users1
  # Get access group users.
  # @param user_id 
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;firstName_a&lt;br&gt;sort&#x3D;lastName_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;email_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;firstname_eq_value&lt;br&gt;filter&#x3D;lastname_eq_value&lt;br&gt;filter&#x3D;accessgroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;email_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUser]
  describe 'get_users1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users2
  # Get access group users.
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;firstName_a&lt;br&gt;sort&#x3D;lastName_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;email_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;firstname_eq_value&lt;br&gt;filter&#x3D;lastname_eq_value&lt;br&gt;filter&#x3D;accessgroupid_eq_1&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;email_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUser]
  describe 'get_users2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_device_time_history
  # Get device time history.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;starttime_eq_1700230364254&lt;br&gt;filter&#x3D;_endtime_eq_1700230364254&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;username_eq_value&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserDeviceTime]
  describe 'get_users_device_time_history test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_device_time_history_summary
  # Get device time history.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;starttime_eq_1700230364262&lt;br&gt;filter&#x3D;_endtime_eq_1700230364262&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;username_eq_value&lt;br&gt;filter&#x3D;userid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIUserDeviceTimeSummary]
  describe 'get_users_device_time_history_summary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_visual_test_access
  # Get VisualTests enabled status.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIVisualTestAccess]
  describe 'get_visual_test_access test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_visual_test_images
  # Retrieve VisualTests images.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIVisualTestImage]
  describe 'get_visual_test_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for load_user_preferences
  # Load user preferences.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUserPreference]
  describe 'load_user_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for load_user_ui_preferences
  # Load ui preferences.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'load_user_ui_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mark_billing_period_as_paid
  # Mark billing period as paid.
  # @param billing_period_id 
  # @param [Hash] opts the optional parameters
  # @return [APIBillingPeriod]
  describe 'mark_billing_period_as_paid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for recover_password
  # Set new password after recovery.
  # @param key 
  # @param password 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'recover_password test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for register
  # Register new user.
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'register test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_device_session
  # Release device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'release_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_device_session1
  # Release device session.
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'release_device_session1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_build_logs
  # Generate build logs zip.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_project_test_run_build_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_files
  # Generate files zip.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_project_test_run_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_logs
  # Generate logs zip.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_project_test_run_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_performance
  # Generate performance zip.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_project_test_run_performance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_project_test_run_screenshots
  # Generate screenshot zip.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_project_test_run_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_build_logs
  # Generate build logs zip.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Integer] :user_id 
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_test_run_build_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_files
  # Generate files zip.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :user_id 
  # @option opts [Integer] :project_id 
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_test_run_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_logs
  # Generate logs zip.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :user_id 
  # @option opts [Integer] :project_id 
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_test_run_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_performance
  # Generate performance zip.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Integer] :user_id 
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_test_run_performance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_test_run_screenshots
  # Generate screenshot zip.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Integer] :user_id 
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_test_run_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_files
  # Generate files zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_logs
  # Generate logs zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_performance
  # Generate performance zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_performance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_screenshots
  # Generate screenshot zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_activation_email
  # Resend activation email to additional user.
  # @param user_id 
  # @param additional_user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'resend_activation_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_activation_email1
  # Resend activation email.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'resend_activation_email1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_email
  # Resend email.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIAdminEmail]
  describe 'resend_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_license
  # Resend license.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APILicense]
  describe 'resend_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reset_api_key
  # Reset api key.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'reset_api_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_user
  # Restore user requested to be deleted.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUser]
  describe 'restore_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_device_session
  # Retry device session.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'retry_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_device_session_with_user
  # Retry device session.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'retry_device_session_with_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_project_test_run
  # Retry test run or its device sessions.
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APITestRun]
  describe 'retry_project_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_test_run
  # Retry test run or its device sessions.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIAdminTestRun]
  describe 'retry_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_test_run_with_test_run
  # Retry test run or its device sessions.
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APITestRun]
  describe 'retry_test_run_with_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_test_run_with_user
  # Retry test run or its device sessions.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APITestRun]
  describe 'retry_test_run_with_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rollback_framework_config
  # Rollback framework&#x27;s config.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIProjectJobConfig]
  describe 'rollback_framework_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_test_run
  # Run test run.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'run_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_user_test_run
  # Run test run.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'run_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for serve_screenshot
  # Get device session screenshot.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param screenshot_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @return [nil]
  describe 'serve_screenshot test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_billable_flag
  # Change billable status.
  # @param run_id 
  # @param billable 
  # @param [Hash] opts the optional parameters
  # @return [APIAdminTestRun]
  describe 'set_billable_flag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_billable_flag1
  # Change billable status for device session.
  # @param device_session_id 
  # @param billable 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'set_billable_flag1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_maintenance
  # Turn on/off maintenance mode.
  # @param enabled 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type 
  # @return [APIMaintenance]
  describe 'set_maintenance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_priority
  # Change priority.
  # @param run_id 
  # @param priority 
  # @param [Hash] opts the optional parameters
  # @return [APIAdminTestRun]
  describe 'set_priority test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_device_group
  # Share device group.
  # @param user_id 
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id 
  # @option opts [String] :email 
  # @return [APIListAPISharedResource]
  describe 'share_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_device_group1
  # Share device group.
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id 
  # @option opts [String] :email 
  # @return [APIListAPISharedResource]
  describe 'share_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_file
  # Share file.
  # @param user_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id 
  # @option opts [String] :email 
  # @return [APIListAPISharedResource]
  describe 'share_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_file1
  # Share file.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id 
  # @option opts [String] :email 
  # @return [APIListAPISharedResource]
  describe 'share_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_project
  # Share project.
  # @param user_id 
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id 
  # @option opts [String] :email 
  # @return [APIListAPISharedResource]
  describe 'share_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_project1
  # Share project.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :access_group_id 
  # @option opts [String] :email 
  # @return [APIListAPISharedResource]
  describe 'share_project1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for store_user_preferences
  # Store user preferences.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIUserPreference]
  describe 'store_user_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for store_user_ui_preferences
  # Store ui preferences.
  # @param user_id 
  # @param data 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'store_user_ui_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_user_notification
  # Test notification.
  # @param user_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [APIMessage]
  describe 'test_user_notification test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unarchive_project
  # Unarchive project.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unarchive_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update access group.
  # @param user_id 
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope 
  # @option opts [String] :name 
  # @return [APIAccessGroup]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update1
  # Update access group.
  # @param access_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope 
  # @option opts [String] :name 
  # @return [APIAccessGroup]
  describe 'update1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_account_preferences
  # Update account preferences.
  # @param body 
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountPreference]
  describe 'update_account_preferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_account_service_price
  # Force update account service subscription price.
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @return [APIAccountService]
  describe 'update_account_service_price test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_api_label
  # Update label.
  # @param group_id 
  # @param label_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :display_name 
  # @return [APIDeviceProperty]
  describe 'update_api_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_browser
  # Update browser.
  # @param id 
  # @param name 
  # @param display_name 
  # @param version 
  # @param os_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :architecture 
  # @option opts [String] :install_url 
  # @return [APIBrowser]
  describe 'update_browser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cluster
  # Update cluster.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :enabled 
  # @option opts [BOOLEAN] :quiet_down 
  # @option opts [BOOLEAN] :restart 
  # @option opts [BOOLEAN] :turn_maintenance 
  # @option opts [String] :url 
  # @return [APICluster]
  describe 'update_cluster test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device
  # Update device.
  # @param device_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :release_version 
  # @option opts [Integer] :api_level 
  # @option opts [String] :serial_id 
  # @option opts [String] :name 
  # @option opts [BOOLEAN] :enabled 
  # @option opts [String] :unlock_gesture 
  # @option opts [String] :init_step 
  # @option opts [String] :ip_address 
  # @option opts [Integer] :account_id 
  # @option opts [Integer] :test_time_limit 
  # @option opts [Integer] :dedication_end_time 
  # @option opts [String] :comment 
  # @return [APIAdminDevice]
  describe 'update_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_cleanup_configuration
  # Update device cleanup configuration.
  # @param id 
  # @param content 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :enabled 
  # @option opts [String] :discriminator 
  # @return [APIDeviceCleanupConfiguration]
  describe 'update_device_cleanup_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_model
  # Update device model.
  # @param device_model_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :release_version 
  # @option opts [Integer] :api_level 
  # @option opts [String] :name 
  # @option opts [String] :manufacturer 
  # @option opts [BOOLEAN] :enabled 
  # @option opts [Integer] :type_id 
  # @option opts [Integer] :credits_price 
  # @return [APIDevice]
  describe 'update_device_model test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_model_browsers
  # Update device model browsers.
  # @param device_model_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :browser_ids 
  # @return [APIListAPIBrowser]
  describe 'update_device_model_browsers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_model_pool
  # Update device model pool.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :min_available 
  # @option opts [Integer] :max_total 
  # @return [APIDeviceModelPool]
  describe 'update_device_model_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_picker
  # Update device picker filters.
  # @param [Hash] opts the optional parameters
  # @option opts [APIDevicePicker] :body 
  # @option opts [BOOLEAN] :sync 
  # @return [APIDevicePicker]
  describe 'update_device_picker test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_session1
  # Update device session by external id.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :client_side_id 
  # @option opts [String] :state 
  # @return [APIDeviceSession]
  describe 'update_device_session1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_session2
  # Update device session by external id.
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :client_side_id 
  # @option opts [String] :state 
  # @return [APIDeviceSession]
  describe 'update_device_session2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_session3
  # Update device session by external id.
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :client_side_id 
  # @option opts [String] :state 
  # @return [APIDeviceSession]
  describe 'update_device_session3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_type
  # Update device frame.
  # @param device_type_id 
  # @param image_width 
  # @param image_height 
  # @param image_left 
  # @param image_top 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :frame_extra_width 
  # @return [APIAdminDeviceType]
  describe 'update_device_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_file_name
  # Update file name.
  # @param user_id 
  # @param file_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'update_file_name test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_file_name1
  # Update file name.
  # @param file_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [APIUserFile]
  describe 'update_file_name1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_file_property
  # Update file property.
  # @param file_id 
  # @param property_id 
  # @param value 
  # @param [Hash] opts the optional parameters
  # @return [APIUserFileProperty]
  describe 'update_file_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_framework
  # Update framework.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :description 
  # @option opts [String] :os_type 
  # @option opts [String] :required_app_extensions 
  # @option opts [String] :required_test_extensions 
  # @option opts [String] :required_test_file_tags 
  # @option opts [String] :documentation_url 
  # @option opts [BOOLEAN] :for_projects 
  # @option opts [BOOLEAN] :can_run_from_ui 
  # @option opts [BOOLEAN] :retryable 
  # @option opts [BOOLEAN] :skip_queue 
  # @option opts [BOOLEAN] :skip_older_sdk 
  # @option opts [String] :type 
  # @option opts [Integer] :label_id 
  # @option opts [BOOLEAN] :add_label_to_devices 
  # @option opts [Array<Integer>] :role_ids 
  # @option opts [Integer] :sample_app_id 
  # @option opts [Integer] :sample_test_id 
  # @option opts [String] :icon 
  # @return [APIFramework]
  describe 'update_framework test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_framework_config
  # Update framework&#x27;s config.
  # @param id 
  # @param content 
  # @param [Hash] opts the optional parameters
  # @return [APIProjectJobConfig]
  describe 'update_framework_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_label_group
  # Update label group.
  # @param group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :display_name 
  # @return [APILabelGroup]
  describe 'update_label_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project
  # Update project.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :description 
  # @option opts [BOOLEAN] :common 
  # @option opts [BOOLEAN] :read_only 
  # @option opts [String] :archiving_strategy 
  # @option opts [Integer] :archiving_item_count 
  # @option opts [String] :email 
  # @return [APIProject]
  describe 'update_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project_test_run
  # Update test run.
  # @param project_id 
  # @param run_id 
  # @param display_name 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'update_project_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_property
  # Update property.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :value 
  # @option opts [String] :description 
  # @option opts [Integer] :from_time 
  # @option opts [Integer] :to_time 
  # @option opts [BOOLEAN] :always_valid 
  # @return [APIProperty]
  describe 'update_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_test_run
  # Update test run.
  # @param run_id 
  # @param display_name 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :project_id 
  # @return [APITestRun]
  describe 'update_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Update user.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name 
  # @option opts [String] :last_name 
  # @option opts [String] :locale_country 
  # @option opts [String] :time_zone 
  # @option opts [String] :email 
  # @option opts [String] :code 
  # @option opts [String] :state 
  # @option opts [String] :city 
  # @option opts [String] :address 
  # @option opts [String] :phone 
  # @option opts [String] :organization 
  # @option opts [String] :password 
  # @option opts [String] :new_password 
  # @option opts [String] :confirm_password 
  # @option opts [BOOLEAN] :mfa_enabled 
  # @option opts [String] :mfa_code 
  # @return [APIUser]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_device_group
  # Update device group.
  # @param user_id 
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :display_name 
  # @option opts [String] :os_type 
  # @return [APIDeviceGroup]
  describe 'update_user_device_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_device_group1
  # Update device group.
  # @param device_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :display_name 
  # @option opts [String] :os_type 
  # @return [APIDeviceGroup]
  describe 'update_user_device_group1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_file
  # Update file content.
  # @param user_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [FileIdFileBody] :body 
  # @return [APIUserFile]
  describe 'update_user_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_file1
  # Update file content.
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @option opts [FileIdFileBody1] :body 
  # @return [APIUserFile]
  describe 'update_user_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_notification
  # Update notification.
  # @param user_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :destination 
  # @option opts [String] :scope 
  # @return [APINotification]
  describe 'update_user_notification test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_project
  # Update project.
  # @param user_id 
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :description 
  # @option opts [String] :archiving_strategy 
  # @option opts [Integer] :archiving_item_count 
  # @return [APIProject]
  describe 'update_user_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_test_run
  # Update test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param display_name 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'update_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_users_device_session1
  # Update device session by external id.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :client_side_id 
  # @option opts [String] :state 
  # @return [APIDeviceSession]
  describe 'update_users_device_session1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_users_main_account
  # Update users main account, switch main user.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :account_id 
  # @return [APIUser]
  describe 'update_users_main_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file
  # Upload file.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [UserIdFilesBody] :body 
  # @return [APIUserFile]
  describe 'upload_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file1
  # Upload file.
  # @param [Hash] opts the optional parameters
  # @option opts [V2FilesBody] :body 
  # @option opts [BOOLEAN] :global 
  # @return [APIUserFile]
  describe 'upload_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file2
  # Upload sample file.
  # @param [Hash] opts the optional parameters
  # @option opts [AdminSamplesBody] :body 
  # @return [APIUserFile]
  describe 'upload_file2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_license
  # Upload license to cloud.
  # @param [Hash] opts the optional parameters
  # @option opts [V2LicenseBody] :body 
  # @return [APILicense]
  describe 'upload_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_test_run_config
  # Validate test run configuration.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :include_devices 
  # @option opts [BOOLEAN] :include_device_groups 
  # @option opts [BOOLEAN] :include_frameworks 
  # @return [APITestRunConfig]
  describe 'validate_test_run_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_test_run_config1
  # Validate test run configuration.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :include_devices 
  # @option opts [BOOLEAN] :include_device_groups 
  # @option opts [BOOLEAN] :include_frameworks 
  # @return [APITestRunConfig]
  describe 'validate_test_run_config1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
