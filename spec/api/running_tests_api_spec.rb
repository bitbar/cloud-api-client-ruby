=begin
#BitbarCloud API

#BitbarCloud API

OpenAPI spec version: 3.24.1-master-20231027-124207

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.50
=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::RunningTestsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RunningTestsApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::RunningTestsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RunningTestsApi' do
    it 'should create an instance of RunningTestsApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::RunningTestsApi)
    end
  end

  # unit tests for create_device_session_connection
  # Create connection for device session.
  # @param user_id 
  # @param device_session_id 
  # @param host 
  # @param port 
  # @param type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :password 
  # @return [APIConnection]
  describe 'create_device_session_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_inspector_device_session
  # Create device session.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [APIDeviceSessionConfig] :body 
  # @option opts [Integer] :device_model_id 
  # @option opts [String] :type 
  # @option opts [String] :browser_name 
  # @option opts [String] :browser_version 
  # @option opts [String] :screen_resolution 
  # @option opts [String] :url 
  # @return [APIDeviceSession]
  describe 'create_inspector_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_visual_test_access
  # Create or update VisualTests access.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIVisualTestAccess]
  describe 'create_or_update_visual_test_access test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Delete users tunnel.
  # @param user_id 
  # @param tunnel_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Get users tunnels.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :active 
  # @return [APIListAPISmartbearTunnel]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_frameworks
  # Get available frameworks.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;canRunFromUI_a&lt;br&gt;sort&#x3D;retryable_a&lt;br&gt;sort&#x3D;skipQueue_a&lt;br&gt;sort&#x3D;forProjects_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;mainUserEmail_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;labelId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;jobConfigId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;osType_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;labelName_a&lt;br&gt;sort&#x3D;secured_a&lt;br&gt;sort&#x3D;skipOlderSdk_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;canrunfromui_eq_true&lt;br&gt;filter&#x3D;retryable_eq_true&lt;br&gt;filter&#x3D;skipqueue_eq_true&lt;br&gt;filter&#x3D;forprojects_eq_true&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;mainuseremail_eq_value&lt;br&gt;filter&#x3D;type_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;labelid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364439&lt;br&gt;filter&#x3D;jobconfigid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;ostype_eq_ios&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;labelname_eq_value&lt;br&gt;filter&#x3D;secured_eq_true&lt;br&gt;filter&#x3D;skipoldersdk_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIFramework]
  describe 'get_available_frameworks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_connections
  # Get connections for device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;path_a&lt;br&gt;sort&#x3D;password_a&lt;br&gt;sort&#x3D;urlSchema_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;port_a&lt;br&gt;sort&#x3D;host_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;type_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;path_eq_value&lt;br&gt;filter&#x3D;password_eq_value&lt;br&gt;filter&#x3D;urlschema_eq_value&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364360&lt;br&gt;filter&#x3D;port_eq_1&lt;br&gt;filter&#x3D;host_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230364360&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;type_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIConnection]
  describe 'get_device_session_connections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_inspector_device_session_connection
  # Get connection for device session.
  # @param user_id 
  # @param device_session_id 
  # @param connection_id 
  # @param [Hash] opts the optional parameters
  # @return [APIConnection]
  describe 'get_user_inspector_device_session_connection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_visual_test_access
  # Get VisualTests enabled status.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APIVisualTestAccess]
  describe 'get_visual_test_access test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_user_test_run
  # Run test run.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'run_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_test_run_config
  # Validate test run configuration.
  # @param body 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :include_devices 
  # @option opts [BOOLEAN] :include_device_groups 
  # @option opts [BOOLEAN] :include_frameworks 
  # @return [APITestRunConfig]
  describe 'validate_test_run_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
