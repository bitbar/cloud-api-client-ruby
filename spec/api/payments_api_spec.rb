=begin
#BitbarCloud API

#BitbarCloud API

OpenAPI spec version: 3.24.1-master-20231027-124207

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.50
=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::PaymentsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PaymentsApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::PaymentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PaymentsApi' do
    it 'should create an instance of PaymentsApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::PaymentsApi)
    end
  end

  # unit tests for buy_service
  # Buy service.
  # @param user_id 
  # @param service_id 
  # @param payment_method 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name 
  # @option opts [String] :last_name 
  # @option opts [String] :email 
  # @option opts [String] :phone 
  # @option opts [String] :organization 
  # @option opts [String] :country 
  # @option opts [String] :city 
  # @option opts [String] :state 
  # @option opts [String] :address 
  # @option opts [String] :zip 
  # @option opts [String] :card_number 
  # @option opts [String] :expiration_date 
  # @option opts [String] :cvv 
  # @option opts [Integer] :count 
  # @option opts [String] :stripe_token 
  # @return [APIServicePaymentStatus]
  describe 'buy_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_subscription
  # Cancel service subscription.
  # @param user_id 
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @return [APIServicePaymentStatus]
  describe 'cancel_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_service_payment
  # Get billing information.
  # @param user_id 
  # @param account_service_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :on_date 
  # @return [APIAccountServicePayment]
  describe 'get_account_service_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_services
  # Get available services.
  # For logged in users
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;pricePerHour_a&lt;br&gt;sort&#x3D;centPrice_a&lt;br&gt;sort&#x3D;customPlan_a&lt;br&gt;sort&#x3D;includedHours_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;commonId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;activated_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230363752&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;activatetime_eq_1700230363752&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;priceperhour_eq_1&lt;br&gt;filter&#x3D;centprice_eq_1&lt;br&gt;filter&#x3D;customplan_eq_true&lt;br&gt;filter&#x3D;includedhours_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;commonid_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;activated_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIService]
  describe 'get_available_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_services1
  # Get available services.
  # For not logged in users
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;archiveTime_a&lt;br&gt;sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;activateTime_a&lt;br&gt;sort&#x3D;description_a&lt;br&gt;sort&#x3D;pricePerHour_a&lt;br&gt;sort&#x3D;centPrice_a&lt;br&gt;sort&#x3D;customPlan_a&lt;br&gt;sort&#x3D;includedHours_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;commonId_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;activated_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;archivetime_eq_1700230364570&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;activatetime_eq_1700230364571&lt;br&gt;filter&#x3D;description_eq_value&lt;br&gt;filter&#x3D;priceperhour_eq_1&lt;br&gt;filter&#x3D;centprice_eq_1&lt;br&gt;filter&#x3D;customplan_eq_true&lt;br&gt;filter&#x3D;includedhours_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;commonid_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;activated_eq_true
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIService]
  describe 'get_available_services1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_billing_period
  # Get billing period.
  # @param user_id 
  # @param billing_period_id 
  # @param [Hash] opts the optional parameters
  # @return [APIBillingPeriod]
  describe 'get_billing_period test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_receipt
  # Get purchased service receipt.
  # @param user_id 
  # @param billing_period_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_receipt test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_active_services
  # Get active services.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;chargeType_a&lt;br&gt;sort&#x3D;active_a&lt;br&gt;sort&#x3D;activatedByName_a&lt;br&gt;sort&#x3D;serviceName_a&lt;br&gt;sort&#x3D;deactivatedByName_a&lt;br&gt;sort&#x3D;accountId_a&lt;br&gt;sort&#x3D;cbtId_a&lt;br&gt;sort&#x3D;price_a&lt;br&gt;sort&#x3D;autoRenew_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;deactivatereason_eq_initial_failure&lt;br&gt;filter&#x3D;chargetype_eq_concurrency&lt;br&gt;filter&#x3D;active_eq_true&lt;br&gt;filter&#x3D;activatedbyname_eq_value&lt;br&gt;filter&#x3D;servicename_eq_value&lt;br&gt;filter&#x3D;deactivatedbyname_eq_value&lt;br&gt;filter&#x3D;accountid_eq_1&lt;br&gt;filter&#x3D;cbtid_eq_value&lt;br&gt;filter&#x3D;price_eq_1&lt;br&gt;filter&#x3D;autorenew_eq_true&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;starttime_eq_1700230363766&lt;br&gt;filter&#x3D;_endtime_eq_1700230363766&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIAccountService]
  describe 'get_user_active_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_billing_periods
  # Get users billing periods.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;additionalHoursPrice_a&lt;br&gt;sort&#x3D;mail_a&lt;br&gt;sort&#x3D;totalPrice_a&lt;br&gt;sort&#x3D;startBillingPeriod_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;_endBillingPeriod_a&lt;br&gt;sort&#x3D;subscriptionEnd_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;servicePrice_a&lt;br&gt;sort&#x3D;lastPaymentDate_a&lt;br&gt;sort&#x3D;subscriptionStart_a&lt;br&gt;sort&#x3D;additionalHours_a&lt;br&gt;sort&#x3D;paymentMethod_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;additionalHoursPaymentDate_a&lt;br&gt;sort&#x3D;paymentDate_a&lt;br&gt;sort&#x3D;plan_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;additionalhoursprice_eq_1&lt;br&gt;filter&#x3D;mail_eq_value&lt;br&gt;filter&#x3D;totalprice_eq_1&lt;br&gt;filter&#x3D;startbillingperiod_eq_1700230364395&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;_endbillingperiod_eq_1700230364395&lt;br&gt;filter&#x3D;subscriptionend_eq_1700230364395&lt;br&gt;filter&#x3D;createtime_eq_1700230364395&lt;br&gt;filter&#x3D;serviceprice_eq_1&lt;br&gt;filter&#x3D;lastpaymentdate_eq_1700230364395&lt;br&gt;filter&#x3D;paid_eq_true&lt;br&gt;filter&#x3D;subscriptionstart_eq_1700230364395&lt;br&gt;filter&#x3D;additionalhours_eq_1&lt;br&gt;filter&#x3D;paymentmethod_eq_paypal&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;plan_eq_value
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIBillingPeriod]
  describe 'get_user_billing_periods test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
