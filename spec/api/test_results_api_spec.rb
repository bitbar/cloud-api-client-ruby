=begin
#BitbarCloud API

#BitbarCloud API

OpenAPI spec version: 3.24.1-master-20231027-124207

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.50
=end

require 'spec_helper'
require 'json'

# Unit tests for BitbarCloudApiClient::TestResultsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TestResultsApi' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::TestResultsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TestResultsApi' do
    it 'should create an instance of TestResultsApi' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::TestResultsApi)
    end
  end

  # unit tests for abort_device_session
  # Abort device session.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'abort_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for abort_user_test_run
  # Abort test run and receive partial results.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'abort_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file
  # Add file to device session.
  # @param name 
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file1
  # Add file to device session.
  # @param name 
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody1] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file2
  # Add file to device session.
  # @param name 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody2] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_file3
  # Add file to device session.
  # @param name 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [OutputfilesetFilesBody3] :body 
  # @option opts [String] :tag 
  # @return [APIUserFile]
  describe 'add_file3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_test_run_tag
  # Add tag to test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'add_test_run_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file1
  # Delete file from device session.
  # @param user_id 
  # @param device_session_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_test_run_tag
  # Delete test run tag.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_test_run_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_test_run
  # Delete test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_output_files_zip
  # Get device session output files.zip.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_output_files_zip test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_test_run_output_files_zip
  # Get device session output files.zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_test_run_output_files_zip test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_test_run_device_session_steps
  # Get device session steps of all device sessions in run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_all_test_run_device_session_steps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_device_session_step
  # Get current device session step.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_current_device_session_step test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_commands
  # Get device session commands.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPICommand]
  describe 'get_device_session_commands test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_steps
  # Get device session steps.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;finishTimeMS_a&lt;br&gt;sort&#x3D;deviceSessionId_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;startTimeMS_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;finishtimems_eq_1&lt;br&gt;filter&#x3D;devicesessionid_eq_1&lt;br&gt;filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;starttimems_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSessionStep]
  describe 'get_device_session_steps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_session_test_case_runs
  # Get device session steps.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPITestCaseRun]
  describe 'get_device_session_test_case_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_sessions
  # Get device sessions.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;clientSideId_a&lt;br&gt;sort&#x3D;externalId_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;biometricInstrumentation_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;projectId_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;clientsideid_eq_value&lt;br&gt;filter&#x3D;externalid_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364086&lt;br&gt;filter&#x3D;biometricinstrumentation_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1700230364086&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230364086&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;projectid_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_null
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSession]
  describe 'get_device_sessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_files_for_device_session_by_tag
  # Get device session output files.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364167&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_files_for_device_session_by_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_inspector_device_sessions
  # Get device sessions.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_properties 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;isExcluded_a&lt;br&gt;sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;clientSideId_a&lt;br&gt;sort&#x3D;externalId_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;device.id_a&lt;br&gt;sort&#x3D;retryState_a&lt;br&gt;sort&#x3D;type_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;duration_a&lt;br&gt;sort&#x3D;timeLimit_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;biometricInstrumentation_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;_endTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;device.displayName_a&lt;br&gt;sort&#x3D;projectName_a&lt;br&gt;sort&#x3D;projectId_a&lt;br&gt;sort&#x3D;testRunName_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;clientsideid_eq_value&lt;br&gt;filter&#x3D;externalid_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;device.id_eq_1&lt;br&gt;filter&#x3D;retrystate_eq_none&lt;br&gt;filter&#x3D;type_eq_automatic&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;duration_eq_1&lt;br&gt;filter&#x3D;timelimit_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364288&lt;br&gt;filter&#x3D;biometricinstrumentation_eq_true&lt;br&gt;filter&#x3D;starttime_eq_1700230364288&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;_endtime_eq_1700230364288&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_aborted&lt;br&gt;filter&#x3D;device.displayname_eq_value&lt;br&gt;filter&#x3D;projectname_eq_value&lt;br&gt;filter&#x3D;projectid_eq_1&lt;br&gt;filter&#x3D;testrunname_eq_null
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIDeviceSession]
  describe 'get_inspector_device_sessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_output_files
  # Get files for device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;size_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;inputType_a&lt;br&gt;sort&#x3D;mimetype_a&lt;br&gt;sort&#x3D;userEmail_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;direction_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;size_eq_1&lt;br&gt;filter&#x3D;createtime_eq_1700230364352&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;inputtype_eq_application&lt;br&gt;filter&#x3D;mimetype_eq_value&lt;br&gt;filter&#x3D;useremail_eq_value&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;state_eq_preparing&lt;br&gt;filter&#x3D;direction_eq_input
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIUserFile]
  describe 'get_output_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_screenshot_names
  # Get screenshot names.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIScreenshot]
  describe 'get_screenshot_names test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_data_availability_with_user
  # Get test run data availability.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRunDataAvailability]
  describe 'get_test_run_data_availability_with_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_screenshots
  # Get test run screenshots by name.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshotExtended]
  describe 'get_test_run_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tag
  # Get test run tag.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param tag_id 
  # @param [Hash] opts the optional parameters
  # @return [APITag]
  describe 'get_test_run_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_test_run_tags
  # Get test run tags.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;testRunId_a&lt;br&gt;sort&#x3D;name_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;testrunid_eq_1&lt;br&gt;filter&#x3D;name_eq_value&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITag]
  describe 'get_test_run_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_session_screenshots
  # Get device session screenshots.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;originalName_a&lt;br&gt;sort&#x3D;takeTimestamp_a&lt;br&gt;sort&#x3D;id_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;originalname_eq_value&lt;br&gt;filter&#x3D;taketimestamp_eq_1&lt;br&gt;filter&#x3D;id_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPIScreenshot]
  describe 'get_user_device_session_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_session_step
  # Get device session step.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param device_session_step_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSessionStep]
  describe 'get_user_device_session_step test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_device_session_with_users
  # Get device session.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'get_user_device_session_with_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_inspector_device_session
  # Get device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_properties 
  # @return [APIDeviceSession]
  describe 'get_user_inspector_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_project_test_runs
  # Get test runs.
  # @param user_id 
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230363968&lt;br&gt;filter&#x3D;starttime_eq_1700230363968&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITestRun]
  describe 'get_user_project_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_test_run
  # Get test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'get_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_test_runs
  # Get test runs.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :for_whole_account 
  # @option opts [BOOLEAN] :skip_common_project 
  # @option opts [BOOLEAN] :skip_shared 
  # @option opts [String] :sort sort parameter contains list of fields used for sort query result &lt;br&gt; examples: &lt;br&gt; sort&#x3D;frameworkId_a&lt;br&gt;sort&#x3D;frameworkName_a&lt;br&gt;sort&#x3D;deviceCount_a&lt;br&gt;sort&#x3D;displayName_a&lt;br&gt;sort&#x3D;executionRatio_a&lt;br&gt;sort&#x3D;successRatio_a&lt;br&gt;sort&#x3D;userId_a&lt;br&gt;sort&#x3D;common_a&lt;br&gt;sort&#x3D;createTime_a&lt;br&gt;sort&#x3D;startTime_a&lt;br&gt;sort&#x3D;id_a&lt;br&gt;sort&#x3D;state_a&lt;br&gt;sort&#x3D;projectId_a
  # @option opts [String] :filter filter parameter contains list of fields used for filter query result &lt;br&gt; examples: &lt;br&gt; filter&#x3D;frameworkid_eq_1&lt;br&gt;filter&#x3D;frameworkname_eq_value&lt;br&gt;filter&#x3D;displayname_eq_value&lt;br&gt;filter&#x3D;successratio_eq_1&lt;br&gt;filter&#x3D;userid_eq_1&lt;br&gt;filter&#x3D;common_eq_true&lt;br&gt;filter&#x3D;createtime_eq_1700230363880&lt;br&gt;filter&#x3D;starttime_eq_1700230363880&lt;br&gt;filter&#x3D;id_eq_1&lt;br&gt;filter&#x3D;projectid_eq_1
  # @option opts [String] :offset offset parameter define page number
  # @option opts [String] :limit limit parameter define page size
  # @return [APIListAPITestRun]
  describe 'get_user_test_runs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_visual_test_images
  # Retrieve VisualTests images.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIListAPIVisualTestImage]
  describe 'get_visual_test_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_device_session
  # Release device session.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'release_device_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_files
  # Generate files zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_logs
  # Generate logs zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_performance
  # Generate performance zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_performance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_user_test_run_screenshots
  # Generate screenshot zip.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APIUserFile]
  describe 'request_user_test_run_screenshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_device_session_with_user
  # Retry device session.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @return [APIDeviceSession]
  describe 'retry_device_session_with_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_test_run_with_user
  # Retry test run or its device sessions.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :device_run_ids 
  # @return [APITestRun]
  describe 'retry_test_run_with_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for serve_screenshot
  # Get device session screenshot.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param screenshot_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @return [nil]
  describe 'serve_screenshot test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_session1
  # Update device session by external id.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :client_side_id 
  # @option opts [String] :state 
  # @return [APIDeviceSession]
  describe 'update_device_session1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_test_run
  # Update test run.
  # @param user_id 
  # @param project_id 
  # @param run_id 
  # @param display_name 
  # @param [Hash] opts the optional parameters
  # @return [APITestRun]
  describe 'update_user_test_run test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_users_device_session1
  # Update device session by external id.
  # @param user_id 
  # @param device_session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [String] :client_side_id 
  # @option opts [String] :state 
  # @return [APIDeviceSession]
  describe 'update_users_device_session1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
