=begin
#BitbarCloud API

#BitbarCloud API

OpenAPI spec version: 3.24.1-master-20231027-124207

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.50
=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for BitbarCloudApiClient::APIAdminError
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'APIAdminError' do
  before do
    # run before each test
    @instance = BitbarCloudApiClient::APIAdminError.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of APIAdminError' do
    it 'should create an instance of APIAdminError' do
      expect(@instance).to be_instance_of(BitbarCloudApiClient::APIAdminError)
    end
  end
  describe 'test attribute "id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "self_uri"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "quantity"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ABORT_REQUEST", "ADB_COMMAND_REJECTED", "ADB_SHELL_COMMAND_FAILED", "APP_LOCK_NOT_INSTALLED", "DEVICE_OFFLINE", "DEVICE_OUTPUT_NULL", "GAMEBENCH_ERROR", "GAMEBENCH_NOT_SUPPORTED", "GRANT_FAILED", "INSTALL_FAILED", "INTERACTIVE_SETUP_FAILED", "INTERNAL_INSTALL_FAILED", "INVALID_TEST_SESSION_FILE", "LOCK_EXPIRED", "LOCK_TIMEOUT", "NO_NETWORK_CONNECTION", "OTHER", "REBOOTING_TIMEOUT", "REPACKAGING", "RESULTS_PREPARING", "RESULTS_PROCESSING", "RESULTS_SENDING", "STEP_TIMEOUT", "SYSTEM_FAILURE", "TEST_RUN_FAILED", "TEST_RUN_INTERRUPTED", "TEST_RUN_TIMEOUT", "TEST_RUN_WARNED", "TEST_TIMEOUT", "VNC_CONNECTION_SETUP_FAILED", "XCRUN_INSTRUMENTS_COMMAND_FAILED", "XCRUN_INSTRUMENTS_JS_ERROR"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.type = value }.not_to raise_error
      # end
    end
  end

end
